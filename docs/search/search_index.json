{"config":{"indexing":"full","lang":["ru","en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sound in air Cramer sound speed equation ISO 9613-1 sound absorption equation Sound speed in pure water Bilaniuk & Wong 36 point euqation Bilaniuk & Wong 112 point euqation Bilaniuk & Wong 148 point euqation Marczak Equation Lubbers & Graaff B1 Lubbers & Graaff C1 Belogolskii & Sekoyan equation Sound speed in sea Coppens equation Mackenzie equation Del Grosso equation Chen & Millero equation (UNESCO) Leroy et al. equation (NPL) Sound absorption in sea Thorp equation Francois & Garrison equation Fisher & Simmons equation Ainslie & McColm equation Depth and pressure relationshep Leroy '68 depth to pressure equation Leroy '97 depth to pressure equation Leroy '97 pressure to depth equation Bisset-Berman pressure to depth equation","title":"Home"},{"location":"depth_to_pressure_sea_leroy_68.en/","text":"Depth to pressure conversion. Leroy '68 equation Mathematical definition $$\\boxed{P\\left( {Z,\\phi } \\right) = 0.102506\\left( {1 + 5.28 \\times {{10}^{ - 3}}{{\\sin }^2}\\phi } \\right)Z + 2.524 \\times {10^{ - 7}}{Z^2}}$$ Notation Description Units Conversion Limits $P$ Pressure $kPa$ $\\times 9.80665 \\times {10^1}$ $Z$ Depth $m$ $\\phi$ Latitude $deg.$ $-90\\ \\le \\phi \\le 90$ Octave/Matlab implementation function P = depth_to_pressure_sea_leroy_68(D,L) % Arguments % D: depth \\ m % L: latitude \\ degree \\ -90 < L < 90 % Results % P: pressure \\ kPa P = 0.102506*(1+(5.28e-3)*sind(L).^2).*D+(2.54e-7)*(D.^2); P = P.*9.80665e1; end Computational examples References Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"Leroy '68 depth to pressure equation"},{"location":"depth_to_pressure_sea_leroy_68.en/#depth-to-pressure-conversion-leroy-68-equation","text":"","title":"Depth to pressure conversion. Leroy '68 equation"},{"location":"depth_to_pressure_sea_leroy_68.en/#mathematical-definition","text":"$$\\boxed{P\\left( {Z,\\phi } \\right) = 0.102506\\left( {1 + 5.28 \\times {{10}^{ - 3}}{{\\sin }^2}\\phi } \\right)Z + 2.524 \\times {10^{ - 7}}{Z^2}}$$ Notation Description Units Conversion Limits $P$ Pressure $kPa$ $\\times 9.80665 \\times {10^1}$ $Z$ Depth $m$ $\\phi$ Latitude $deg.$ $-90\\ \\le \\phi \\le 90$","title":"Mathematical definition"},{"location":"depth_to_pressure_sea_leroy_68.en/#octavematlab-implementation","text":"function P = depth_to_pressure_sea_leroy_68(D,L) % Arguments % D: depth \\ m % L: latitude \\ degree \\ -90 < L < 90 % Results % P: pressure \\ kPa P = 0.102506*(1+(5.28e-3)*sind(L).^2).*D+(2.54e-7)*(D.^2); P = P.*9.80665e1; end","title":"Octave/Matlab implementation"},{"location":"depth_to_pressure_sea_leroy_68.en/#computational-examples","text":"","title":"Computational examples"},{"location":"depth_to_pressure_sea_leroy_68.en/#references","text":"Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"References"},{"location":"depth_to_pressure_sea_leroy_97.en/","text":"Depth to pressure conversion. Leroy '97 equation Mathematical definition $$\\boxed{P\\left( {Z,\\phi } \\right) = h\\left( {Z,\\phi } \\right) - \\delta h\\left( Z \\right)}$$ Notation Description Units Conversion Limits $P$ Pressure $kPa$ $\\times 10^{3}$ $Z$ Depth $m$ $\\phi$ Latitude $deg$ $-90\\ \\le \\phi \\le 90$ $$h\\left( {Z,\\phi } \\right) = h\\left( {Z,45} \\right) \\times k\\left( {Z,\\phi } \\right)$$ $$\\begin{array}{l} h\\left( {Z,45} \\right) = 1.00818 \\times {10^{ - 2}}Z + 2.465 \\times {10^{ - 8}}{Z^2}\\\\ - 1.25 \\times {10^{ - 13}}{Z^3} + 2.8 \\times {10^{ - 19}}{Z^4} \\end{array}$$ $$k\\left( {Z,\\phi } \\right) = \\frac{{g\\left( \\phi \\right) - 2 \\times {{10}^{ - 5}}Z}}{{9.80612 - 2 \\times {{10}^{ - 5}}Z}}$$ $$g\\left( \\phi \\right) = 0.7803\\left( {1 + 5.3 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right)} \\right)$$ Octave/Matlab implementation function P = depth_to_pressure_sea_leroy_97(D,L) % Arguments % D: depth \\ m \\ 0 < D < 4000 % L: latitude \\ degree \\ -90 < L < 90 % Results % P: pressure \\ kPa g = 9.7803*(1 + (5.3e-3)*sind(L).^2); kZ = (g - (2e-5)*D)./(9.80612 - (2e-5)*D); hZ = (1.00818e-2)*D + (2.465e-8)*(D.^2) ... - (1.25e-13)*(D.^3) + (2.8e-19) *(D.^4); P = hZ.*kZ.*1e3; end Computational examples References Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"Leroy '97 depth to pressure equation"},{"location":"depth_to_pressure_sea_leroy_97.en/#depth-to-pressure-conversion-leroy-97-equation","text":"","title":"Depth to pressure conversion. Leroy '97 equation"},{"location":"depth_to_pressure_sea_leroy_97.en/#mathematical-definition","text":"$$\\boxed{P\\left( {Z,\\phi } \\right) = h\\left( {Z,\\phi } \\right) - \\delta h\\left( Z \\right)}$$ Notation Description Units Conversion Limits $P$ Pressure $kPa$ $\\times 10^{3}$ $Z$ Depth $m$ $\\phi$ Latitude $deg$ $-90\\ \\le \\phi \\le 90$ $$h\\left( {Z,\\phi } \\right) = h\\left( {Z,45} \\right) \\times k\\left( {Z,\\phi } \\right)$$ $$\\begin{array}{l} h\\left( {Z,45} \\right) = 1.00818 \\times {10^{ - 2}}Z + 2.465 \\times {10^{ - 8}}{Z^2}\\\\ - 1.25 \\times {10^{ - 13}}{Z^3} + 2.8 \\times {10^{ - 19}}{Z^4} \\end{array}$$ $$k\\left( {Z,\\phi } \\right) = \\frac{{g\\left( \\phi \\right) - 2 \\times {{10}^{ - 5}}Z}}{{9.80612 - 2 \\times {{10}^{ - 5}}Z}}$$ $$g\\left( \\phi \\right) = 0.7803\\left( {1 + 5.3 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right)} \\right)$$","title":"Mathematical definition"},{"location":"depth_to_pressure_sea_leroy_97.en/#octavematlab-implementation","text":"function P = depth_to_pressure_sea_leroy_97(D,L) % Arguments % D: depth \\ m \\ 0 < D < 4000 % L: latitude \\ degree \\ -90 < L < 90 % Results % P: pressure \\ kPa g = 9.7803*(1 + (5.3e-3)*sind(L).^2); kZ = (g - (2e-5)*D)./(9.80612 - (2e-5)*D); hZ = (1.00818e-2)*D + (2.465e-8)*(D.^2) ... - (1.25e-13)*(D.^3) + (2.8e-19) *(D.^4); P = hZ.*kZ.*1e3; end","title":"Octave/Matlab implementation"},{"location":"depth_to_pressure_sea_leroy_97.en/#computational-examples","text":"","title":"Computational examples"},{"location":"depth_to_pressure_sea_leroy_97.en/#references","text":"Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"References"},{"location":"pressure_to_depth_sea_bisset.en/","text":"Depth to pressure conversion. Bisset-Berman equation Mathematical definition $$\\boxed{Z\\left( {P,\\phi } \\right) = \\frac{{9.7512P}}{{1 + 5.3 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right)}} - 2.07 \\times {10^{ - 4}}{P^2}}$$ Notation Description Units Conversion Limits $Z$ Depth $m$ $P$ Pressure $kPa$ $\\times {\\left( {9.80665 \\times {{10}^1}} \\right)^{ - 1}}$ $\\phi$ Latitude $deg$ $-90\\ \\le \\phi \\le 90$ Octave/Matlab implementation function D = pressure_to_depth_sea_bisset(P,L) % Arguments % P: pressure \\ kPa % L: latitude \\ degree \\ -90 < L < 90 % Results % D: depth \\ m P = P./9.80665e1; D = 9.7512*P./(1+(5.3e-3)*sind(L).^2) - (2.07e-4)*P.^2; end Computational examples References Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998 \"Instruction manual for salinity/temperature/depth/sound velocity measuring systems models 9040\", 1971","title":"Bisset-Berman pressure to depth equation"},{"location":"pressure_to_depth_sea_bisset.en/#depth-to-pressure-conversion-bisset-berman-equation","text":"","title":"Depth to pressure conversion. Bisset-Berman equation"},{"location":"pressure_to_depth_sea_bisset.en/#mathematical-definition","text":"$$\\boxed{Z\\left( {P,\\phi } \\right) = \\frac{{9.7512P}}{{1 + 5.3 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right)}} - 2.07 \\times {10^{ - 4}}{P^2}}$$ Notation Description Units Conversion Limits $Z$ Depth $m$ $P$ Pressure $kPa$ $\\times {\\left( {9.80665 \\times {{10}^1}} \\right)^{ - 1}}$ $\\phi$ Latitude $deg$ $-90\\ \\le \\phi \\le 90$","title":"Mathematical definition"},{"location":"pressure_to_depth_sea_bisset.en/#octavematlab-implementation","text":"function D = pressure_to_depth_sea_bisset(P,L) % Arguments % P: pressure \\ kPa % L: latitude \\ degree \\ -90 < L < 90 % Results % D: depth \\ m P = P./9.80665e1; D = 9.7512*P./(1+(5.3e-3)*sind(L).^2) - (2.07e-4)*P.^2; end","title":"Octave/Matlab implementation"},{"location":"pressure_to_depth_sea_bisset.en/#computational-examples","text":"","title":"Computational examples"},{"location":"pressure_to_depth_sea_bisset.en/#references","text":"Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998 \"Instruction manual for salinity/temperature/depth/sound velocity measuring systems models 9040\", 1971","title":"References"},{"location":"pressure_to_depth_sea_leroy_97.en/","text":"Pressure to depth conversion. Leroy '97 equation Mathematical definition $$\\boxed{Z\\left( {P,\\phi } \\right) = \\frac{{9.72659 \\times {{10}^2}P - 2.512 \\times {{10}^{ - 1}}{P^2} + 2.279 \\times {{10}^{ - 4}}{P^3} - 1.82 \\times {{10}^{ - 7}}{P^4}}}{{g\\left( \\phi \\right) + 1.092 \\times {{10}^{ - 4}}P}}}$$ Notation Definition Units Conversion Limits $Z$ Depth $m$ $P$ Pressure $kPa$ $\\times {10^{ - 3}}$ $0\\ < P\\ < 1000$ $\\phi$ Latitude $deg$ $-90\\ < \\phi < 90$ $$g\\left( \\phi \\right) = 9.780318\\left( {1 + 5.2788 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right) - 2.36 \\times {{10}^{ - 5}}{{\\sin }^4}\\left( \\phi \\right)} \\right)$$ Octave/Matlab implementation function D = pressure_to_depth_sea_leroy_97(P,L) % Arguments % P: pressure \\ kPa % L: latitude \\ degree \\ -90 < L < 90 % Results % D: depth \\ m P = P*1e-3; G = 9.780318*(1 + (5.2788e-3)*(sind(L).^2) - (2.36e-5)*(sind(L).^4)); D = (9.72659e2)*P - (2.512e-1)*(P.^2) + (2.279e-4)*(P.^3) - (1.82e-7)*(P.^4); D = D./(G + (1.092e-4).*P); end Computational examples References Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"Leroy '97 pressure to depth equation"},{"location":"pressure_to_depth_sea_leroy_97.en/#pressure-to-depth-conversion-leroy-97-equation","text":"","title":"Pressure to depth conversion. Leroy '97 equation"},{"location":"pressure_to_depth_sea_leroy_97.en/#mathematical-definition","text":"$$\\boxed{Z\\left( {P,\\phi } \\right) = \\frac{{9.72659 \\times {{10}^2}P - 2.512 \\times {{10}^{ - 1}}{P^2} + 2.279 \\times {{10}^{ - 4}}{P^3} - 1.82 \\times {{10}^{ - 7}}{P^4}}}{{g\\left( \\phi \\right) + 1.092 \\times {{10}^{ - 4}}P}}}$$ Notation Definition Units Conversion Limits $Z$ Depth $m$ $P$ Pressure $kPa$ $\\times {10^{ - 3}}$ $0\\ < P\\ < 1000$ $\\phi$ Latitude $deg$ $-90\\ < \\phi < 90$ $$g\\left( \\phi \\right) = 9.780318\\left( {1 + 5.2788 \\times {{10}^{ - 3}}{{\\sin }^2}\\left( \\phi \\right) - 2.36 \\times {{10}^{ - 5}}{{\\sin }^4}\\left( \\phi \\right)} \\right)$$","title":"Mathematical definition"},{"location":"pressure_to_depth_sea_leroy_97.en/#octavematlab-implementation","text":"function D = pressure_to_depth_sea_leroy_97(P,L) % Arguments % P: pressure \\ kPa % L: latitude \\ degree \\ -90 < L < 90 % Results % D: depth \\ m P = P*1e-3; G = 9.780318*(1 + (5.2788e-3)*(sind(L).^2) - (2.36e-5)*(sind(L).^4)); D = (9.72659e2)*P - (2.512e-1)*(P.^2) + (2.279e-4)*(P.^3) - (1.82e-7)*(P.^4); D = D./(G + (1.092e-4).*P); end","title":"Octave/Matlab implementation"},{"location":"pressure_to_depth_sea_leroy_97.en/#computational-examples","text":"","title":"Computational examples"},{"location":"pressure_to_depth_sea_leroy_97.en/#references","text":"Leroy, Claude C; Parthiot, Fran\u00e7ois, \"Depth-pressure relationships in the oceans and seas\", 1998","title":"References"},{"location":"sound_absorption_air_iso.en/","text":"Sound absorption in air. ISO 9613-1 equation Octave/Matlab implementation function alpha = sound_absorption_air_iso(T,RH,P,f) % Arguments % T: temperature \\ degree Celsius % RH: relative humidity \\ percentage % P: pressure \\ kPa % f: frequency \\ kHz % Results % alpha: absorption of sound in air \\ Kelvin = 273.15; T_ref = Kelvin + 20; T_kel = Kelvin + T; T_rel = T_kel / T_ref; T_01 = Kelvin + 0.01; P_ref = 101.325; P_rel = P / P_ref; P_sat_over_P_ref = 10.^(-6.8346*(T_01./T_kel).^(1.261) + 4.6151); H = RH.*(P_sat_over_P_ref./P_rel); Fro = P_rel.*(24 + 40400*H.*(0.02 + H)./(0.391 + H)); Frn = P_rel./sqrt(T_rel).*(9 + 280*H*exp(-4.17*(T_rel.^(-1/3) - 1))); Xc = 1.8400e-11 ./ P_rel * sqrt(T_rel); Xo = 0.01275 * exp(-2239.1./T_kel)./(Fro + ((f.^2) / Fro)); Xn = 0.1068 * exp(-3352./T_kel)./(Frn + ((f.^2)./Frn)); alpha = 20*log10(exp(1)).*(f.^2).*(Xc + (T_rel.^(-5/2)).*(Xo + Xn)); end Computational examples $mmd_ERROR: Bad eval result sound_absorption_air_iso_ex_1 References","title":"ISO 9613-1 sound absorption equation"},{"location":"sound_absorption_air_iso.en/#sound-absorption-in-air-iso-9613-1-equation","text":"","title":"Sound absorption in air. ISO 9613-1 equation"},{"location":"sound_absorption_air_iso.en/#octavematlab-implementation","text":"function alpha = sound_absorption_air_iso(T,RH,P,f) % Arguments % T: temperature \\ degree Celsius % RH: relative humidity \\ percentage % P: pressure \\ kPa % f: frequency \\ kHz % Results % alpha: absorption of sound in air \\ Kelvin = 273.15; T_ref = Kelvin + 20; T_kel = Kelvin + T; T_rel = T_kel / T_ref; T_01 = Kelvin + 0.01; P_ref = 101.325; P_rel = P / P_ref; P_sat_over_P_ref = 10.^(-6.8346*(T_01./T_kel).^(1.261) + 4.6151); H = RH.*(P_sat_over_P_ref./P_rel); Fro = P_rel.*(24 + 40400*H.*(0.02 + H)./(0.391 + H)); Frn = P_rel./sqrt(T_rel).*(9 + 280*H*exp(-4.17*(T_rel.^(-1/3) - 1))); Xc = 1.8400e-11 ./ P_rel * sqrt(T_rel); Xo = 0.01275 * exp(-2239.1./T_kel)./(Fro + ((f.^2) / Fro)); Xn = 0.1068 * exp(-3352./T_kel)./(Frn + ((f.^2)./Frn)); alpha = 20*log10(exp(1)).*(f.^2).*(Xc + (T_rel.^(-5/2)).*(Xo + Xn)); end","title":"Octave/Matlab implementation"},{"location":"sound_absorption_air_iso.en/#computational-examples","text":"$mmd_ERROR: Bad eval result sound_absorption_air_iso_ex_1","title":"Computational examples"},{"location":"sound_absorption_air_iso.en/#references","text":"","title":"References"},{"location":"sound_absorption_sea_ainslie.en/","text":"Sound absorption in sea. Ainslie & McColm equation Mathematical definition $$\\boxed{\\alpha \\left( {T,S,D,f,pH} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Conversion Limits $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $-6 < T < 35$ $S$ salinity $\u2030$ $5 < S < 50$ $D$ depth $m$ $0 < D < 7000$ $f$ frequency $kHz$ $10^{-1} < f < {10^3}$ $pH$ acidity $7.7 < pH < 8.3$ $${A_1} = 0.106 \\times \\exp \\left( {\\left( {pH - 8} \\right)/0.56} \\right)$$ $${P_1} = 1$$ $${f_1} = 0.78\\sqrt {S/35} \\exp \\left( {T/26} \\right)$$ $${A_2} = 0.52\\left( {S/35} \\right)\\left( {1 + T/43} \\right)$$ $${P_2} = \\exp \\left( { - D/6} \\right)$$ $${f_2} = 42\\exp \\left( {T/17} \\right)$$ $${A_3} = 0.00049\\exp \\left( { - \\left( {T/27 + D/17} \\right)} \\right)$$ $${P_3} = 1$$ Notation Description Units Conversion Limits $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulphate relaxation frequency $kHz$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulphate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$ Octave/Matlab implementation function [alpha, Boric, MgSO4, H2O] = sound_absorption_sea_ainslie(T,S,D,f,pH) % Arguments % T: temperature \\ degree Celsius % S: salinity \\ ppt % D: depth \\ m % f: frequency \\ kHz % pH: \"potential of hydrogen\" % Results % alpha: absorption of sound in seawater \\ dB/km D = D*1e-3; % Boric A1 = 0.106*exp((pH-8)./0.56); P1 = 1; f1 = 0.78*sqrt(S./35).*exp(T./26); Boric = (A1.*P1.*f1*(f.^2))./((f.^2)+(f1.^2)); % MgSO4 A2 = 0.52*(S./35).*(1+T./43); P2 = exp(-D./6); f2 = 42*exp(T./17); MgSO4 = (A2.*P2.*f2*(f.^2))./((f.^2)+(f2.^2)); % H2O A3 = 0.00049*exp(-(T./27+D./17)); P3 = 1; H2O = A3.*P3.*(f.^2); % Total alpha = Boric + MgSO4 + H2O; end Computational examples References Ainslie, Michael A; McColm, James G, \"A simplified formula for viscous and chemical absorption in sea water\", 1998","title":"Ainslie & McColm equation"},{"location":"sound_absorption_sea_ainslie.en/#sound-absorption-in-sea-ainslie-mccolm-equation","text":"","title":"Sound absorption in sea. Ainslie &amp; McColm equation"},{"location":"sound_absorption_sea_ainslie.en/#mathematical-definition","text":"$$\\boxed{\\alpha \\left( {T,S,D,f,pH} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Conversion Limits $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $-6 < T < 35$ $S$ salinity $\u2030$ $5 < S < 50$ $D$ depth $m$ $0 < D < 7000$ $f$ frequency $kHz$ $10^{-1} < f < {10^3}$ $pH$ acidity $7.7 < pH < 8.3$ $${A_1} = 0.106 \\times \\exp \\left( {\\left( {pH - 8} \\right)/0.56} \\right)$$ $${P_1} = 1$$ $${f_1} = 0.78\\sqrt {S/35} \\exp \\left( {T/26} \\right)$$ $${A_2} = 0.52\\left( {S/35} \\right)\\left( {1 + T/43} \\right)$$ $${P_2} = \\exp \\left( { - D/6} \\right)$$ $${f_2} = 42\\exp \\left( {T/17} \\right)$$ $${A_3} = 0.00049\\exp \\left( { - \\left( {T/27 + D/17} \\right)} \\right)$$ $${P_3} = 1$$ Notation Description Units Conversion Limits $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulphate relaxation frequency $kHz$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulphate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$","title":"Mathematical definition"},{"location":"sound_absorption_sea_ainslie.en/#octavematlab-implementation","text":"function [alpha, Boric, MgSO4, H2O] = sound_absorption_sea_ainslie(T,S,D,f,pH) % Arguments % T: temperature \\ degree Celsius % S: salinity \\ ppt % D: depth \\ m % f: frequency \\ kHz % pH: \"potential of hydrogen\" % Results % alpha: absorption of sound in seawater \\ dB/km D = D*1e-3; % Boric A1 = 0.106*exp((pH-8)./0.56); P1 = 1; f1 = 0.78*sqrt(S./35).*exp(T./26); Boric = (A1.*P1.*f1*(f.^2))./((f.^2)+(f1.^2)); % MgSO4 A2 = 0.52*(S./35).*(1+T./43); P2 = exp(-D./6); f2 = 42*exp(T./17); MgSO4 = (A2.*P2.*f2*(f.^2))./((f.^2)+(f2.^2)); % H2O A3 = 0.00049*exp(-(T./27+D./17)); P3 = 1; H2O = A3.*P3.*(f.^2); % Total alpha = Boric + MgSO4 + H2O; end","title":"Octave/Matlab implementation"},{"location":"sound_absorption_sea_ainslie.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_absorption_sea_ainslie.en/#references","text":"Ainslie, Michael A; McColm, James G, \"A simplified formula for viscous and chemical absorption in sea water\", 1998","title":"References"},{"location":"sound_absorption_sea_fisher.en/","text":"Sound absorption in sea. Fisher & Simmons equation Mathematical definition $$\\boxed{\\alpha \\left( {T,D,f} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Converion Limits $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $D$ depth $m$ $f$ frequency $kHz$ $${A_1} = \\left( {1.03 \\times {{10}^{ - 8}}} \\right) + \\left( {2.36 \\times {{10}^{ - 10}}} \\right)T - \\left( {5.22 \\times {{10}^{ - 12}}} \\right){T^2}$$ $${P_1} = 1$$ $${f_1} = \\left( {1.32 \\times {{10}^3}} \\right){T_K}\\exp \\left( { - 1700/{T_K}} \\right)$$ $${A_2} = \\left( {5.62 \\times {{10}^{ - 8}}} \\right) + \\left( {7.52 \\times {{10}^{ - 10}}T} \\right)$$ $${P_2} = 1 - \\left( {10.3 \\times {{10}^{ - 4}}} \\right)P + \\left( {3.7 \\times {{10}^{ - 7}}} \\right){P^2}$$ $${f_2} = \\left( {1.55 \\times {{10}^7}} \\right){T_K}\\exp \\left( { - 3052/{T_K}} \\right)$$ $${A_3} = \\left( {55.9 - 2.37T + \\left( {4.77 \\times {{10}^{ - 2}}} \\right){T^2} - \\left( {3.48 \\times {{10}^{ - 4}}} \\right){T^3}} \\right) \\times {10^{ - 15}}$$ $${P_3} = 1 - \\left( {3.84 \\times {{10}^{ - 4}}} \\right)P + \\left( {7.57 \\times {{10}^{ - 8}}} \\right){P^2}$$ Notation Description Units Conversion Limits $T_{K}$ temperature $K$ $=273.15+T$ $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulphate relaxation frequency $kHz$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulphate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$ Octave/Matlab implementation function [alpha, Boric, MgSO4, H2O] = sound_absorption_sea_fisher(T,D,f) % Arguments % T: temperature \\ degree Celsius % D: depth \\ m % f: frequency \\ kHz \\ 10 < f < 400 % Results % alpha: absorption of sound in seawater \\ dB/km T_kel = 273.1 + T; P = D ./ 10.0; f = f * 1e3; % Boric A1 = (1.03e-8) + (2.36e-10)*T - (5.22e-12)*(T.^2); P1 = 1; f1 = (1.32e3)*T_kel.*exp(-1700./T_kel); Boric = (A1.*P1.*f1.*(f.^2))./((f.^2)+(f1.^2)); Boric = Boric * 8686; % MgSO4 A2 = (5.62e-8) + (7.52e-10)*T; P2 = 1 - (10.3e-4)*P + (3.7e-7)*(P.^2); f2 = (1.55e7)*T_kel.*exp(-3052./T_kel); MgSO4 = (A2.*P2.*f2.*(f.^2))./((f.^2)+(f2.^2)); MgSO4 = MgSO4 * 8686; % H2O A3 = (55.9 - 2.37*T + (4.77e-2)*(T.^2) - (3.48e-4)*(T.^3))*(1e-15); P3 = 1 - (3.84e-4)*P + (7.57e-8)*(P.^2); H2O = A3.*P3.*(f.^2); H2O = H2O * 8686; % Total alpha = (Boric + MgSO4 + H2O); end Computational examples References Fisher, FH; Simmons, VP, \"Sound absorption in sea water\", 1977 Lyman, John; Fleming, Richard H, \"Composition of sea water\", 1940","title":"Fisher & Simmons equation"},{"location":"sound_absorption_sea_fisher.en/#sound-absorption-in-sea-fisher-simmons-equation","text":"","title":"Sound absorption in sea. Fisher &amp; Simmons equation"},{"location":"sound_absorption_sea_fisher.en/#mathematical-definition","text":"$$\\boxed{\\alpha \\left( {T,D,f} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Converion Limits $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $D$ depth $m$ $f$ frequency $kHz$ $${A_1} = \\left( {1.03 \\times {{10}^{ - 8}}} \\right) + \\left( {2.36 \\times {{10}^{ - 10}}} \\right)T - \\left( {5.22 \\times {{10}^{ - 12}}} \\right){T^2}$$ $${P_1} = 1$$ $${f_1} = \\left( {1.32 \\times {{10}^3}} \\right){T_K}\\exp \\left( { - 1700/{T_K}} \\right)$$ $${A_2} = \\left( {5.62 \\times {{10}^{ - 8}}} \\right) + \\left( {7.52 \\times {{10}^{ - 10}}T} \\right)$$ $${P_2} = 1 - \\left( {10.3 \\times {{10}^{ - 4}}} \\right)P + \\left( {3.7 \\times {{10}^{ - 7}}} \\right){P^2}$$ $${f_2} = \\left( {1.55 \\times {{10}^7}} \\right){T_K}\\exp \\left( { - 3052/{T_K}} \\right)$$ $${A_3} = \\left( {55.9 - 2.37T + \\left( {4.77 \\times {{10}^{ - 2}}} \\right){T^2} - \\left( {3.48 \\times {{10}^{ - 4}}} \\right){T^3}} \\right) \\times {10^{ - 15}}$$ $${P_3} = 1 - \\left( {3.84 \\times {{10}^{ - 4}}} \\right)P + \\left( {7.57 \\times {{10}^{ - 8}}} \\right){P^2}$$ Notation Description Units Conversion Limits $T_{K}$ temperature $K$ $=273.15+T$ $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulphate relaxation frequency $kHz$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulphate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$","title":"Mathematical definition"},{"location":"sound_absorption_sea_fisher.en/#octavematlab-implementation","text":"function [alpha, Boric, MgSO4, H2O] = sound_absorption_sea_fisher(T,D,f) % Arguments % T: temperature \\ degree Celsius % D: depth \\ m % f: frequency \\ kHz \\ 10 < f < 400 % Results % alpha: absorption of sound in seawater \\ dB/km T_kel = 273.1 + T; P = D ./ 10.0; f = f * 1e3; % Boric A1 = (1.03e-8) + (2.36e-10)*T - (5.22e-12)*(T.^2); P1 = 1; f1 = (1.32e3)*T_kel.*exp(-1700./T_kel); Boric = (A1.*P1.*f1.*(f.^2))./((f.^2)+(f1.^2)); Boric = Boric * 8686; % MgSO4 A2 = (5.62e-8) + (7.52e-10)*T; P2 = 1 - (10.3e-4)*P + (3.7e-7)*(P.^2); f2 = (1.55e7)*T_kel.*exp(-3052./T_kel); MgSO4 = (A2.*P2.*f2.*(f.^2))./((f.^2)+(f2.^2)); MgSO4 = MgSO4 * 8686; % H2O A3 = (55.9 - 2.37*T + (4.77e-2)*(T.^2) - (3.48e-4)*(T.^3))*(1e-15); P3 = 1 - (3.84e-4)*P + (7.57e-8)*(P.^2); H2O = A3.*P3.*(f.^2); H2O = H2O * 8686; % Total alpha = (Boric + MgSO4 + H2O); end","title":"Octave/Matlab implementation"},{"location":"sound_absorption_sea_fisher.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_absorption_sea_fisher.en/#references","text":"Fisher, FH; Simmons, VP, \"Sound absorption in sea water\", 1977 Lyman, John; Fleming, Richard H, \"Composition of sea water\", 1940","title":"References"},{"location":"sound_absorption_sea_francois.en/","text":"Sound absorption in sea. Francois & Garrison equation Mathematical definition $$\\boxed{\\alpha \\left( {T,S,D,f,pH} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Conversion Limits for $f < 500 \\; kHz$ Limits for $f > 500 \\; kHz$ $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $-2 < T < 22$ $0 < T < 30$ $S$ salinity $\u2030$ $30 < S < 35$ $0 < S < 40$ $D$ depth $m$ $0 < D < 3500$ $0 < D < 10000$ $f$ frequency $kHz$ $10^{ - 2} < f$ $f < {10^3}$ $pH$ acidity $${A_1} = \\left( {8.86/C} \\right) \\times {10^{0.78pH - 5}}$$ $${f_1} = 2.8\\sqrt {S/35} \\times {10^{\\left( {4 - 1245/{T_K}} \\right)}}$$ $${A_2} = 21.44\\left( {S/C} \\right)\\left( {1 + 0.025T} \\right)$$ $${P_2} = 1 - \\left( {1.37 \\times {{10}^{ - 4}}} \\right)D + \\left( {6.2 \\times {{10}^{ - 9}}} \\right){D^2}$$ $${f_2} = \\frac{{8.17 \\times {{10}^{\\left( {8 - 1990/{T_K}} \\right)}}}}{{1 + 0.0018\\left( {S - 35} \\right)}}$$ $${A_3} = \\left\\{ {\\begin{array}{c} {\\begin{array}{l} {\\left( {4.937 \\times {{10}^{ - 4}}} \\right) - \\left( {2.590 \\times {{10}^{ - 5}}} \\right)T}\\\\ { + \\left( {9.11 \\times {{10}^{ - 7}}} \\right){T^2} - \\left( {1.5 \\times {{10}^{ - 8}}} \\right){T^3}} \\end{array}}&{T \\le 20}\\\\ {\\begin{array}{l} {\\left( {3.964 \\times {{10}^{ - 4}}} \\right) - \\left( {1.146 \\times {{10}^{ - 5}}} \\right)T}\\\\ { + \\left( {1.45 \\times {{10}^{ - 7}}} \\right){T^2} - \\left( {6.5 \\times {{10}^{ - 10}}} \\right){T^3}} \\end{array}}&{T > 20} \\end{array}} \\right.$$ $${P_3} = 1 - \\left( {3.83 \\times {{10}^{ - 5}}} \\right)D + \\left( {4.9 \\times {{10}^{ - 10}}} \\right){D^2}$$ $$C = 1412 + 3.21T + 1.19S + 0.0167D$$ Notation Description Units Conversion Limits $T_{K}$ temperature $K$ $=273.15+T$ $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulfate relaxation frequency $kHz$ $C$ sound speed $m/s$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulfate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$ Octave/Matlab implementation function [alpha, Boric, MgSO4, H2O, C] = sound_absorption_sea_francois ... (T,S,D,f,pH) % Arguments % T: temperature \\ degree Celsius \\ % -2 < T < 22 for 10 Hz < f < 500 kHz % 0 < T < 30 for f > 500 kHz % S: salinity \\ ppt \\ % 30 < S < 35 for 10 Hz < f < 500 kHz % 0 < S < 40 for f > 500 kHz % D: depth \\ m \\ % 0 < D < 3500 for 10 Hz < f < 500 kHz % 0 < D < 10000 for f > 500 kHz % f: frequency \\ kHz % pH: \"potential of hydrogen\" % Results % alpha: absorption of sound in seawater \\ dB/km T_kel = 273 + T; % Sound speed C = 1412 + 3.21*T + 1.19*S + 0.0167*D; % Boric A1 = (8.86./C).*10.^(0.78.*pH-5); P1 = 1; f1 = 2.8 * sqrt(S./35).*10.^(4-1245./T_kel); Boric = (A1.*P1.*f1.*(f.^2))./((f.^2)+(f1.^2)); % MgSO4 A2 = 21.44*(S./C).*(1+0.025*T); P2 = 1 - (1.37e-4)*D + (6.2e-9)*(D.^2); f2 = (8.17*(10.^(8-1990./T_kel)))./(1+0.0018*(S-35)); MgSO4 = (A2.*P2.*f2.*(f.^2))./((f.^2) + (f2.^2)); % H2O if T <= 20 A3 = (4.937e-4) - (2.590e-5)*T ... + (9.11e-7)*(T.^2) - (1.5e-8)*(T.^3); else A3 = (3.964e-4) - (1.146e-5)*T ... + (1.45e-7)*(T.^2) - (6.5e-10)*(T.^3); end P3 = 1 - (3.83e-5)*D + (4.9e-10)*(D.^2); H2O = A3*P3*(f.^2); % Total alpha = Boric + MgSO4 + H2O; end Computational examples References Francois, RE; Garrison, GR, \"Sound absorption based on ocean measurements: Part I: Pure water and magnesium sulfate contributions\", 1982 Francois, RE; Garrison, GR, \"Sound absorption based on ocean measurements. Part II: Boric acid contribution and equation for total absorption\", 1982","title":"Francois & Garrison equation"},{"location":"sound_absorption_sea_francois.en/#sound-absorption-in-sea-francois-garrison-equation","text":"","title":"Sound absorption in sea. Francois &amp; Garrison equation"},{"location":"sound_absorption_sea_francois.en/#mathematical-definition","text":"$$\\boxed{\\alpha \\left( {T,S,D,f,pH} \\right) = \\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}} + \\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}} + {A_3}{P_3}{f^2}}$$ Notation Description Units Conversion Limits for $f < 500 \\; kHz$ Limits for $f > 500 \\; kHz$ $\\alpha$ absorption $dB/km$ $T$ temperature $^{\\circ}C$ $-2 < T < 22$ $0 < T < 30$ $S$ salinity $\u2030$ $30 < S < 35$ $0 < S < 40$ $D$ depth $m$ $0 < D < 3500$ $0 < D < 10000$ $f$ frequency $kHz$ $10^{ - 2} < f$ $f < {10^3}$ $pH$ acidity $${A_1} = \\left( {8.86/C} \\right) \\times {10^{0.78pH - 5}}$$ $${f_1} = 2.8\\sqrt {S/35} \\times {10^{\\left( {4 - 1245/{T_K}} \\right)}}$$ $${A_2} = 21.44\\left( {S/C} \\right)\\left( {1 + 0.025T} \\right)$$ $${P_2} = 1 - \\left( {1.37 \\times {{10}^{ - 4}}} \\right)D + \\left( {6.2 \\times {{10}^{ - 9}}} \\right){D^2}$$ $${f_2} = \\frac{{8.17 \\times {{10}^{\\left( {8 - 1990/{T_K}} \\right)}}}}{{1 + 0.0018\\left( {S - 35} \\right)}}$$ $${A_3} = \\left\\{ {\\begin{array}{c} {\\begin{array}{l} {\\left( {4.937 \\times {{10}^{ - 4}}} \\right) - \\left( {2.590 \\times {{10}^{ - 5}}} \\right)T}\\\\ { + \\left( {9.11 \\times {{10}^{ - 7}}} \\right){T^2} - \\left( {1.5 \\times {{10}^{ - 8}}} \\right){T^3}} \\end{array}}&{T \\le 20}\\\\ {\\begin{array}{l} {\\left( {3.964 \\times {{10}^{ - 4}}} \\right) - \\left( {1.146 \\times {{10}^{ - 5}}} \\right)T}\\\\ { + \\left( {1.45 \\times {{10}^{ - 7}}} \\right){T^2} - \\left( {6.5 \\times {{10}^{ - 10}}} \\right){T^3}} \\end{array}}&{T > 20} \\end{array}} \\right.$$ $${P_3} = 1 - \\left( {3.83 \\times {{10}^{ - 5}}} \\right)D + \\left( {4.9 \\times {{10}^{ - 10}}} \\right){D^2}$$ $$C = 1412 + 3.21T + 1.19S + 0.0167D$$ Notation Description Units Conversion Limits $T_{K}$ temperature $K$ $=273.15+T$ $f_{1}$ boric acid relaxation frequency $kHz$ $f_{2}$ magnesium sulfate relaxation frequency $kHz$ $C$ sound speed $m/s$ $\\frac{{{A_1}{P_1}{f_1}{f^2}}}{{{f_1}^2 + {f^2}}}$ boric acid contribution $dB/km$ $\\frac{{{A_2}{P_2}{f_2}{f^2}}}{{{f_2}^2 + {f^2}}}$ magnesium sulfate contribution $dB/km$ ${A_3}{P_3}{f^2}$ pure water contribution $dB/km$","title":"Mathematical definition"},{"location":"sound_absorption_sea_francois.en/#octavematlab-implementation","text":"function [alpha, Boric, MgSO4, H2O, C] = sound_absorption_sea_francois ... (T,S,D,f,pH) % Arguments % T: temperature \\ degree Celsius \\ % -2 < T < 22 for 10 Hz < f < 500 kHz % 0 < T < 30 for f > 500 kHz % S: salinity \\ ppt \\ % 30 < S < 35 for 10 Hz < f < 500 kHz % 0 < S < 40 for f > 500 kHz % D: depth \\ m \\ % 0 < D < 3500 for 10 Hz < f < 500 kHz % 0 < D < 10000 for f > 500 kHz % f: frequency \\ kHz % pH: \"potential of hydrogen\" % Results % alpha: absorption of sound in seawater \\ dB/km T_kel = 273 + T; % Sound speed C = 1412 + 3.21*T + 1.19*S + 0.0167*D; % Boric A1 = (8.86./C).*10.^(0.78.*pH-5); P1 = 1; f1 = 2.8 * sqrt(S./35).*10.^(4-1245./T_kel); Boric = (A1.*P1.*f1.*(f.^2))./((f.^2)+(f1.^2)); % MgSO4 A2 = 21.44*(S./C).*(1+0.025*T); P2 = 1 - (1.37e-4)*D + (6.2e-9)*(D.^2); f2 = (8.17*(10.^(8-1990./T_kel)))./(1+0.0018*(S-35)); MgSO4 = (A2.*P2.*f2.*(f.^2))./((f.^2) + (f2.^2)); % H2O if T <= 20 A3 = (4.937e-4) - (2.590e-5)*T ... + (9.11e-7)*(T.^2) - (1.5e-8)*(T.^3); else A3 = (3.964e-4) - (1.146e-5)*T ... + (1.45e-7)*(T.^2) - (6.5e-10)*(T.^3); end P3 = 1 - (3.83e-5)*D + (4.9e-10)*(D.^2); H2O = A3*P3*(f.^2); % Total alpha = Boric + MgSO4 + H2O; end","title":"Octave/Matlab implementation"},{"location":"sound_absorption_sea_francois.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_absorption_sea_francois.en/#references","text":"Francois, RE; Garrison, GR, \"Sound absorption based on ocean measurements: Part I: Pure water and magnesium sulfate contributions\", 1982 Francois, RE; Garrison, GR, \"Sound absorption based on ocean measurements. Part II: Boric acid contribution and equation for total absorption\", 1982","title":"References"},{"location":"sound_absorption_sea_thorp.en/","text":"Sound absorption in sea. Thorp equation Mathematical definition $$\\boxed{\\alpha \\left( f \\right) = {\\frac{{0.1{f^2}}}{{1 + {f^2}}} + \\frac{{40{f^2}}}{{4100 + {f^2}}}}}$$ Notation Description Units Conversion Limits $\\alpha$ absorption $dB/km$ $\\times 1.0936$ $f$ frequency $kHz$ $f < 50$ Octave/Matlab implementation function alpha = sound_absorption_sea_thorp(f) % Arguments % f: frequency \\ kHz % Results % alpha: absorption of sound in seawater \\ dB/km alpha = 1.0936*(0.1*(f.^2)./(1+f.^2) ... + 40*(f.^2)./(4100+f.^2)); end Computational examples $0.01\\ \\text{\u043a\u0413\u0446}$ $0.10\\ \\text{\u043a\u0413\u0446}$ $1.00\\ \\text{\u043a\u0413\u0446}$ $10.00\\ \\text{\u043a\u0413\u0446}$ $100.00\\ \\text{\u043a\u0413\u0446}$ $1.200E-05$ $1.189E-03$ $6.535E-02$ $1.150E+00$ $3.113E+01$ References Thorp, William H, \"Analytic description of the low\u2010frequency attenuation coefficient\", 1967 Etter, Paul C, \"Underwater acoustic modeling and simulation\", 2018","title":"Thorp equation"},{"location":"sound_absorption_sea_thorp.en/#sound-absorption-in-sea-thorp-equation","text":"","title":"Sound absorption in sea. Thorp equation"},{"location":"sound_absorption_sea_thorp.en/#mathematical-definition","text":"$$\\boxed{\\alpha \\left( f \\right) = {\\frac{{0.1{f^2}}}{{1 + {f^2}}} + \\frac{{40{f^2}}}{{4100 + {f^2}}}}}$$ Notation Description Units Conversion Limits $\\alpha$ absorption $dB/km$ $\\times 1.0936$ $f$ frequency $kHz$ $f < 50$","title":"Mathematical definition"},{"location":"sound_absorption_sea_thorp.en/#octavematlab-implementation","text":"function alpha = sound_absorption_sea_thorp(f) % Arguments % f: frequency \\ kHz % Results % alpha: absorption of sound in seawater \\ dB/km alpha = 1.0936*(0.1*(f.^2)./(1+f.^2) ... + 40*(f.^2)./(4100+f.^2)); end","title":"Octave/Matlab implementation"},{"location":"sound_absorption_sea_thorp.en/#computational-examples","text":"$0.01\\ \\text{\u043a\u0413\u0446}$ $0.10\\ \\text{\u043a\u0413\u0446}$ $1.00\\ \\text{\u043a\u0413\u0446}$ $10.00\\ \\text{\u043a\u0413\u0446}$ $100.00\\ \\text{\u043a\u0413\u0446}$ $1.200E-05$ $1.189E-03$ $6.535E-02$ $1.150E+00$ $3.113E+01$","title":"Computational examples"},{"location":"sound_absorption_sea_thorp.en/#references","text":"Thorp, William H, \"Analytic description of the low\u2010frequency attenuation coefficient\", 1967 Etter, Paul C, \"Underwater acoustic modeling and simulation\", 2018","title":"References"},{"location":"sound_speed_air_cramer.en/","text":"Sound speed in air. Cramer equation Mathematical definition $$\\boxed{\\begin{array}{l} C\\left( {T,P,{X_w},{X_c}} \\right) = {a_0} + {a_1}T + {a_2}{T^2} + \\left( {{a_3} + {a_4}T + {a_5}{T^2}} \\right){X_w}\\\\ + \\left( {{a_6} + {a_7}T + {a_8}{T^2}} \\right)P + \\left( {{a_9} + {a_{10}}T + {a_{11}}{T^2}} \\right){X_c}\\\\ + {a_{12}}{X_w}^2 + {a_{13}}{P^2} + {a_{14}}{X_c}^2 + {a_{15}}{X_w}P{X_c} \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 30$ $P$ pressure $kPa$ $\\times 10^{3}$ $75 < P < 102$ $X_{w}$ water vapor mole fraction $X_{w} < 0.06$ $X_{c}$ carbon dioxide mole fraction Coefficient Value Coefficient Value $a_{1}$ $331.5024$ $a_{9}$ $-85.20931$ $a_{2}$ $0.603055$ $a_{10}$ $-0.228525$ $a_{3}$ $-0.000528$ $a_{11}$ $5.91e-5$ $a_{4}$ $51.471935$ $a_{12}$ $-2.835149$ $a_{5}$ $0.1495874$ $a_{13}$ $-2.15e-13$ $a_{6}$ $-0.000782$ $a_{14}$ $29.179762$ $a_{7}$ $-1.82 \\times 10^{-7}$ $a_{15}$ $0.000486$ $a_{8}$ $3.73 \\times 10^{-8}$ $${p_{sv}} = 1{\\rm{Pa}} \\times \\exp \\left( {A{T_K}^2 + B{T_K} + C + \\frac{D}{{{T_K}}}} \\right)$$ Octave/Matlab implementation function C = sound_speed_air_cramer(T,RH,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 30 % RH: relative humidity \\ percentage % P: pressure \\ kPa \\ 75 < P < 102 % Results % C: speed of sound in air \\ m/s T_kel = T + 273.15; P = P*1e3; ENH = (3.14e-8)*P + 1.00062 + (T.^2)*(5.6e-7); PSV1 = (T_kel.^2)*(1.2378847e-5) - (1.9121316e-2)*T_kel; PSV2 = 33.93711047 - (6.3431645e3)./T_kel; PSV = exp(PSV1).*exp(PSV2); H = RH.*ENH.*PSV./P; Xw = H/100.0; Xc = 400e-6; a0 = 331.5024; a1 = 0.603055; a2 = -0.000528; a3 = 51.471935; a4 = 0.1495874; a5 = -0.000782; a6 = -1.82e-7; a7 = 3.73e-8; a8 = -2.93e-10; a9 = -85.20931; a10 = -0.228525; a11 = 5.91e-5; a12 = -2.835149; a13 = -2.15e-13; a14 = 29.179762; a15 = 0.000486; C = a0 + a1*T + a2*(T.^2) + (a3 + a4*T + a5*(T.^2)).*Xw ... + (a6 + a7*T + a8*(T.^2)).*P + (a9 + a10*T+a11*(T.^2)).*Xc ... + a12*Xw.^2 + a13*(P.^2) + a14*(Xc.^2) + a15.*Xw.*P.*Xc; end Computational examples References Cramer, Owen, \"The variation of the specific heat ratio and the speed of sound in air with temperature, pressure, humidity, and CO2 concentration\", 1993 Davis, Richard S, \"Equation for the determination of the density of moist air (1981/91)\", 1992","title":"Cramer sound speed equation"},{"location":"sound_speed_air_cramer.en/#sound-speed-in-air-cramer-equation","text":"","title":"Sound speed in air. Cramer equation"},{"location":"sound_speed_air_cramer.en/#mathematical-definition","text":"$$\\boxed{\\begin{array}{l} C\\left( {T,P,{X_w},{X_c}} \\right) = {a_0} + {a_1}T + {a_2}{T^2} + \\left( {{a_3} + {a_4}T + {a_5}{T^2}} \\right){X_w}\\\\ + \\left( {{a_6} + {a_7}T + {a_8}{T^2}} \\right)P + \\left( {{a_9} + {a_{10}}T + {a_{11}}{T^2}} \\right){X_c}\\\\ + {a_{12}}{X_w}^2 + {a_{13}}{P^2} + {a_{14}}{X_c}^2 + {a_{15}}{X_w}P{X_c} \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 30$ $P$ pressure $kPa$ $\\times 10^{3}$ $75 < P < 102$ $X_{w}$ water vapor mole fraction $X_{w} < 0.06$ $X_{c}$ carbon dioxide mole fraction Coefficient Value Coefficient Value $a_{1}$ $331.5024$ $a_{9}$ $-85.20931$ $a_{2}$ $0.603055$ $a_{10}$ $-0.228525$ $a_{3}$ $-0.000528$ $a_{11}$ $5.91e-5$ $a_{4}$ $51.471935$ $a_{12}$ $-2.835149$ $a_{5}$ $0.1495874$ $a_{13}$ $-2.15e-13$ $a_{6}$ $-0.000782$ $a_{14}$ $29.179762$ $a_{7}$ $-1.82 \\times 10^{-7}$ $a_{15}$ $0.000486$ $a_{8}$ $3.73 \\times 10^{-8}$ $${p_{sv}} = 1{\\rm{Pa}} \\times \\exp \\left( {A{T_K}^2 + B{T_K} + C + \\frac{D}{{{T_K}}}} \\right)$$","title":"Mathematical definition"},{"location":"sound_speed_air_cramer.en/#octavematlab-implementation","text":"function C = sound_speed_air_cramer(T,RH,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 30 % RH: relative humidity \\ percentage % P: pressure \\ kPa \\ 75 < P < 102 % Results % C: speed of sound in air \\ m/s T_kel = T + 273.15; P = P*1e3; ENH = (3.14e-8)*P + 1.00062 + (T.^2)*(5.6e-7); PSV1 = (T_kel.^2)*(1.2378847e-5) - (1.9121316e-2)*T_kel; PSV2 = 33.93711047 - (6.3431645e3)./T_kel; PSV = exp(PSV1).*exp(PSV2); H = RH.*ENH.*PSV./P; Xw = H/100.0; Xc = 400e-6; a0 = 331.5024; a1 = 0.603055; a2 = -0.000528; a3 = 51.471935; a4 = 0.1495874; a5 = -0.000782; a6 = -1.82e-7; a7 = 3.73e-8; a8 = -2.93e-10; a9 = -85.20931; a10 = -0.228525; a11 = 5.91e-5; a12 = -2.835149; a13 = -2.15e-13; a14 = 29.179762; a15 = 0.000486; C = a0 + a1*T + a2*(T.^2) + (a3 + a4*T + a5*(T.^2)).*Xw ... + (a6 + a7*T + a8*(T.^2)).*P + (a9 + a10*T+a11*(T.^2)).*Xc ... + a12*Xw.^2 + a13*(P.^2) + a14*(Xc.^2) + a15.*Xw.*P.*Xc; end","title":"Octave/Matlab implementation"},{"location":"sound_speed_air_cramer.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_air_cramer.en/#references","text":"Cramer, Owen, \"The variation of the specific heat ratio and the speed of sound in air with temperature, pressure, humidity, and CO2 concentration\", 1993 Davis, Richard S, \"Equation for the determination of the density of moist air (1981/91)\", 1992","title":"References"},{"location":"sound_speed_sea_coppens.en/","text":"Sound speed in sea. Coppens equation Mathematical definition $$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = C\\left( {T,S,0} \\right) + \\left( {16.23 + 0.253T} \\right)D + \\left( {0.213 - 0.1T} \\right){D^2}\\\\ + \\left( {0.016 + 0.0002\\left( {S - 35} \\right)} \\right)\\left( {S - 35} \\right)TD \\end{array}}$$ Notation Definition Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $\\times10^{-1}$ $-2 < T < 35$ $S$ salinity $\u2030$ $0 < S < 42$ $D$ depth $m$ $\\times10^{-3}$ $0 < D < 4000$ $$\\begin{array}{l} C\\left( {T,S,0} \\right) = 1449.05 + 45.7T - 5.21{T^2} + 0.23{T^3}\\\\ + \\left( {1.333 - 0.126T + 0.009{T^2}} \\right)\\left( {S - 35} \\right) \\end{array}$$ Octave/Matlab implementation function C = sound_speed_sea_coppens(T,S,D) % Arguments % T: temperature \\ degree Celsius \\ -2 < T < 35 % S: salinity \\ ppt \\ 0 < S < 42 % D: depth \\ m \\ 0 < D < 4000 % Results % C: speed of sound in seawater \\ m/s d = D.*(1e-3); t = T.*(1e-1); C = 1449.05 + 45.7*t - 5.21*(t.^2) + 0.23*(t).^3 ... + (1.333 - 0.126*t + 0.009*(t.^2)).*(S - 35) ... + (16.23 + 0.253*t).*d + (0.213-0.1*t).*(d.^2) ... + (0.016 + 0.0002*(S-35)).*(S-35).*t.*d; end Computational examples $D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.55$ $1483.85$ $1516.03$ $1540.46$ $1558.51$ $1000\\ m$ $1458.83$ $1500.21$ $1532.46$ $1556.97$ $1575.10$ $2000\\ m$ $1475.70$ $1516.96$ $1549.09$ $1573.47$ $1591.48$ $5000\\ m$ $1528.86$ $1568.56$ $1599.12$ $1621.93$ $1638.38$ References Coppens, Alan B, \"Simple equations for the speed of sound in Neptunian waters\", 1981","title":"Coppens equation"},{"location":"sound_speed_sea_coppens.en/#sound-speed-in-sea-coppens-equation","text":"","title":"Sound speed in sea. Coppens equation"},{"location":"sound_speed_sea_coppens.en/#mathematical-definition","text":"$$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = C\\left( {T,S,0} \\right) + \\left( {16.23 + 0.253T} \\right)D + \\left( {0.213 - 0.1T} \\right){D^2}\\\\ + \\left( {0.016 + 0.0002\\left( {S - 35} \\right)} \\right)\\left( {S - 35} \\right)TD \\end{array}}$$ Notation Definition Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $\\times10^{-1}$ $-2 < T < 35$ $S$ salinity $\u2030$ $0 < S < 42$ $D$ depth $m$ $\\times10^{-3}$ $0 < D < 4000$ $$\\begin{array}{l} C\\left( {T,S,0} \\right) = 1449.05 + 45.7T - 5.21{T^2} + 0.23{T^3}\\\\ + \\left( {1.333 - 0.126T + 0.009{T^2}} \\right)\\left( {S - 35} \\right) \\end{array}$$","title":"Mathematical definition"},{"location":"sound_speed_sea_coppens.en/#octavematlab-implementation","text":"function C = sound_speed_sea_coppens(T,S,D) % Arguments % T: temperature \\ degree Celsius \\ -2 < T < 35 % S: salinity \\ ppt \\ 0 < S < 42 % D: depth \\ m \\ 0 < D < 4000 % Results % C: speed of sound in seawater \\ m/s d = D.*(1e-3); t = T.*(1e-1); C = 1449.05 + 45.7*t - 5.21*(t.^2) + 0.23*(t).^3 ... + (1.333 - 0.126*t + 0.009*(t.^2)).*(S - 35) ... + (16.23 + 0.253*t).*d + (0.213-0.1*t).*(d.^2) ... + (0.016 + 0.0002*(S-35)).*(S-35).*t.*d; end","title":"Octave/Matlab implementation"},{"location":"sound_speed_sea_coppens.en/#computational-examples","text":"$D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.55$ $1483.85$ $1516.03$ $1540.46$ $1558.51$ $1000\\ m$ $1458.83$ $1500.21$ $1532.46$ $1556.97$ $1575.10$ $2000\\ m$ $1475.70$ $1516.96$ $1549.09$ $1573.47$ $1591.48$ $5000\\ m$ $1528.86$ $1568.56$ $1599.12$ $1621.93$ $1638.38$","title":"Computational examples"},{"location":"sound_speed_sea_coppens.en/#references","text":"Coppens, Alan B, \"Simple equations for the speed of sound in Neptunian waters\", 1981","title":"References"},{"location":"sound_speed_sea_delgrosso.en/","text":"Sound speed in sea. Del Grosso equation Mathematical definition $$\\boxed{C\\left( {T,S,P} \\right) = {C_{002}} + \\Delta {C_T} + \\Delta {C_S} + \\Delta {C_P} + \\Delta {C_{TPS}}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 35$ $S$ salinity $\u2030$ $29 < S < 43$ $P$ pressure $kPa$ $\\times 1.019716 \\times 10^{-2}$ $0 < P < 98000$ $$\\Delta {C_T}\\left( T \\right) = {C_{T1}}T + {C_{T2}}{T^2} + {C_{T3}}{T^3}$$ $$\\Delta {C_S}\\left( S \\right) = {C_{S1}}S + {C_{S2}}{S^2}$$ $$\\Delta {C_P}\\left( P \\right) = {C_{P1}}P + {C_{P2}}{P^2} + {P_{P3}}{P^3}$$ $$\\begin{array}{l} \\Delta {C_{TPS}}\\left( {T,P,S} \\right) = {C_{TP}}TP + {C_{T3P}}{T^3}P + {C_{TP2}}T{P^2}\\\\ + {C_{T2P2}}{T^2}{P^2} + {C_{TP3}}T{P^3} + {C_{ST}}ST\\\\ + {C_{ST2}}S{T^2} + {C_{STP}}STP + {C_{S2TP}}{S^2}TP + {C_{S2P2}}{S^2}{P^2} \\end{array}$$ Coefficient Value Coefficient Value $C_{000}$ $1402.392$ $C_{ST}$ $-0.1275936\\times10^{-1}$ $C_{T1}$ $0.5012285\\times10^{1}$ $C_{TP}$ $0.6353509\\times10^{-2}$ $C_{T2}$ $-0.551184\\times10^{-1}$ $C_{T2P2}$ $0.2656174\\times10^{-7}$ $C_{T3}$ $0.221649\\times10^{-3}$ $C_{TP2}$ $-0.1593895\\times10^{-5}$ $C_{S1}$ $0.1329530\\times10^{1}$ $C_{TP3}$ $0.5222483\\times10^{-9}$ $C_{S2}$ $0.1288598\\times10^{-3}$ $C_{T3P}$ $-0.4383615\\times10^{-6}$ $C_{P1}$ $0.1560592$ $C_{S2P2}$ $-0.1616745\\times10^{-8}$ $C_{P2}$ $0.2449993\\times10^{-4}$ $C_{T2S}$ $0.9688441\\times10^{-4}$ $C_{P3}$ $-0.8833959\\times10^{-8}$ $C_{S2TP}$ $0.4857614\\times10^{-5}$ $C_{TSP}$ $-0.3406824\\times10^{-3}$ Octave/Matlab implementation function C = sound_speed_sea_delgrosso(T,S,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 35 % S: salinity \\ ppt \\ 29 < S < 43 % P: pressure \\ kPa \\ 0 < P < 98000 % Results % C: speed of sound in seawater \\ m/s C000 = 1402.392; CT1 = 0.5012285e1; CT2 = -0.551184e-1; CT3 = 0.221649e-3; CS1 = 0.1329530e1; CS2 = 0.1288598e-3; CP1 = 0.1560592; CP2 = 0.2449993e-4; CP3 = -0.8833959e-8; CST = -0.1275936e-1; CTP = 0.6353509e-2; CT2P2 = 0.2656174e-7; CTP2 = -0.1593895e-5; CTP3 = 0.5222483e-9; CT3P = -0.4383615e-6; CS2P2 = -0.1616745e-8; CST2 = 0.9688441e-4; CS2TP = 0.4857614e-5; CSTP =-0.3406824e-3; p = (P./100)*1.019716; CT = CT1*T + CT2*(T.^2) + CT3*(T.^3); CS = CS1*S + CS2*(S.^2); CP = CP1*p + CP2*(p.^2) + CP3*(p.^3); CSTP = CTP*T.*p + CT3P*(T.^3).*p + CTP2*T.*(p.^2) + ... CT2P2*(T.^2).*(p.^2) + CTP3*T.*(p.^3) + ... CST*S.*T + CST2*S.*(T.^2) + CSTP*S.*T.*p + ... CS2TP*(S.^2)*T.*p + CS2P2*(S.^2).*(p.^2); C = C000 + CT + CS + CP + CSTP; end Computational examples $D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.55$ $1483.85$ $1516.04$ $1540.44$ $1558.37$ $1000\\ m$ $1458.67$ $1500.30$ $1532.61$ $1556.65$ $1573.49$ $2000\\ m$ $1475.45$ $1517.18$ $1549.48$ $1573.14$ $1588.94$ $5000\\ m$ $1528.32$ $1569.16$ $1600.96$ $1623.67$ $1637.27$ References Del Grosso, Vincent A, \"New equation for the speed of sound in natural waters (with comparisons to other equations)\", 1974","title":"Del Grosso equation"},{"location":"sound_speed_sea_delgrosso.en/#sound-speed-in-sea-del-grosso-equation","text":"","title":"Sound speed in sea. Del Grosso equation"},{"location":"sound_speed_sea_delgrosso.en/#mathematical-definition","text":"$$\\boxed{C\\left( {T,S,P} \\right) = {C_{002}} + \\Delta {C_T} + \\Delta {C_S} + \\Delta {C_P} + \\Delta {C_{TPS}}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 35$ $S$ salinity $\u2030$ $29 < S < 43$ $P$ pressure $kPa$ $\\times 1.019716 \\times 10^{-2}$ $0 < P < 98000$ $$\\Delta {C_T}\\left( T \\right) = {C_{T1}}T + {C_{T2}}{T^2} + {C_{T3}}{T^3}$$ $$\\Delta {C_S}\\left( S \\right) = {C_{S1}}S + {C_{S2}}{S^2}$$ $$\\Delta {C_P}\\left( P \\right) = {C_{P1}}P + {C_{P2}}{P^2} + {P_{P3}}{P^3}$$ $$\\begin{array}{l} \\Delta {C_{TPS}}\\left( {T,P,S} \\right) = {C_{TP}}TP + {C_{T3P}}{T^3}P + {C_{TP2}}T{P^2}\\\\ + {C_{T2P2}}{T^2}{P^2} + {C_{TP3}}T{P^3} + {C_{ST}}ST\\\\ + {C_{ST2}}S{T^2} + {C_{STP}}STP + {C_{S2TP}}{S^2}TP + {C_{S2P2}}{S^2}{P^2} \\end{array}$$ Coefficient Value Coefficient Value $C_{000}$ $1402.392$ $C_{ST}$ $-0.1275936\\times10^{-1}$ $C_{T1}$ $0.5012285\\times10^{1}$ $C_{TP}$ $0.6353509\\times10^{-2}$ $C_{T2}$ $-0.551184\\times10^{-1}$ $C_{T2P2}$ $0.2656174\\times10^{-7}$ $C_{T3}$ $0.221649\\times10^{-3}$ $C_{TP2}$ $-0.1593895\\times10^{-5}$ $C_{S1}$ $0.1329530\\times10^{1}$ $C_{TP3}$ $0.5222483\\times10^{-9}$ $C_{S2}$ $0.1288598\\times10^{-3}$ $C_{T3P}$ $-0.4383615\\times10^{-6}$ $C_{P1}$ $0.1560592$ $C_{S2P2}$ $-0.1616745\\times10^{-8}$ $C_{P2}$ $0.2449993\\times10^{-4}$ $C_{T2S}$ $0.9688441\\times10^{-4}$ $C_{P3}$ $-0.8833959\\times10^{-8}$ $C_{S2TP}$ $0.4857614\\times10^{-5}$ $C_{TSP}$ $-0.3406824\\times10^{-3}$","title":"Mathematical definition"},{"location":"sound_speed_sea_delgrosso.en/#octavematlab-implementation","text":"function C = sound_speed_sea_delgrosso(T,S,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 35 % S: salinity \\ ppt \\ 29 < S < 43 % P: pressure \\ kPa \\ 0 < P < 98000 % Results % C: speed of sound in seawater \\ m/s C000 = 1402.392; CT1 = 0.5012285e1; CT2 = -0.551184e-1; CT3 = 0.221649e-3; CS1 = 0.1329530e1; CS2 = 0.1288598e-3; CP1 = 0.1560592; CP2 = 0.2449993e-4; CP3 = -0.8833959e-8; CST = -0.1275936e-1; CTP = 0.6353509e-2; CT2P2 = 0.2656174e-7; CTP2 = -0.1593895e-5; CTP3 = 0.5222483e-9; CT3P = -0.4383615e-6; CS2P2 = -0.1616745e-8; CST2 = 0.9688441e-4; CS2TP = 0.4857614e-5; CSTP =-0.3406824e-3; p = (P./100)*1.019716; CT = CT1*T + CT2*(T.^2) + CT3*(T.^3); CS = CS1*S + CS2*(S.^2); CP = CP1*p + CP2*(p.^2) + CP3*(p.^3); CSTP = CTP*T.*p + CT3P*(T.^3).*p + CTP2*T.*(p.^2) + ... CT2P2*(T.^2).*(p.^2) + CTP3*T.*(p.^3) + ... CST*S.*T + CST2*S.*(T.^2) + CSTP*S.*T.*p + ... CS2TP*(S.^2)*T.*p + CS2P2*(S.^2).*(p.^2); C = C000 + CT + CS + CP + CSTP; end","title":"Octave/Matlab implementation"},{"location":"sound_speed_sea_delgrosso.en/#computational-examples","text":"$D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.55$ $1483.85$ $1516.04$ $1540.44$ $1558.37$ $1000\\ m$ $1458.67$ $1500.30$ $1532.61$ $1556.65$ $1573.49$ $2000\\ m$ $1475.45$ $1517.18$ $1549.48$ $1573.14$ $1588.94$ $5000\\ m$ $1528.32$ $1569.16$ $1600.96$ $1623.67$ $1637.27$","title":"Computational examples"},{"location":"sound_speed_sea_delgrosso.en/#references","text":"Del Grosso, Vincent A, \"New equation for the speed of sound in natural waters (with comparisons to other equations)\", 1974","title":"References"},{"location":"sound_speed_sea_mackenzie.en/","text":"Sound speed in sea. Mackenzie equation Mathematical definition $$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = 1448.96 + 4.591T - 5.304 \\times {10^{ - 2}}{T^2} + 2.374 \\times {10^{ - 4}}{T^3}\\\\ + 1.340\\left( {S - 35} \\right) + 1.630 \\times {10^{ - 2}}D + 1.675 \\times {10^{ - 7}}{D^2}\\\\ - 1.025 \\times {10^{ - 2}}T\\left( {S - 35} \\right) - 7.139 \\times {10^{ - 13}}T{D^3} \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $-2 < T < 30$ $S$ salinity $\u2030$ $25 < S < 40$ $D$ depth $m$ $0 < D < 8000$ Octave/Matlab implementation function C = sound_speed_sea_mackenzie(T,S,D) % Arguments % T: temperature \\ degree Celsius \\ -2 < T < 30 % S: salinity \\ ppt \\ 25 < S < 40 % D: depth \\ m \\ 0 < D < 8000 % Results % C: speed of sound in seawater \\ m/s C = 1448.96 + 4.591*T - (5.304e-2)*(T.^2) + (2.374e-4)*(T.^3) ... + 1.340*(S-35) + (1.630e-2)*D + (1.675e-7)*(D.^2) ... - (1.025e-2)*T.*(S-35) - (7.139e-13)*T.*(D.^3); end Computational examples $D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.42$ $1483.78$ $1515.95$ $1540.36$ $1558.44$ $1000\\ m$ $1458.73$ $1500.08$ $1532.24$ $1556.65$ $1574.72$ $2000\\ m$ $1475.53$ $1516.83$ $1548.94$ $1573.30$ $1591.32$ $5000\\ m$ $1527.95$ $1568.41$ $1599.69$ $1623.21$ $1640.40$ References Mackenzie, Kenneth V, \"Nine\u2010term equation for sound speed in the oceans\", 1981","title":"Mackenzie equation"},{"location":"sound_speed_sea_mackenzie.en/#sound-speed-in-sea-mackenzie-equation","text":"","title":"Sound speed in sea. Mackenzie equation"},{"location":"sound_speed_sea_mackenzie.en/#mathematical-definition","text":"$$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = 1448.96 + 4.591T - 5.304 \\times {10^{ - 2}}{T^2} + 2.374 \\times {10^{ - 4}}{T^3}\\\\ + 1.340\\left( {S - 35} \\right) + 1.630 \\times {10^{ - 2}}D + 1.675 \\times {10^{ - 7}}{D^2}\\\\ - 1.025 \\times {10^{ - 2}}T\\left( {S - 35} \\right) - 7.139 \\times {10^{ - 13}}T{D^3} \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $-2 < T < 30$ $S$ salinity $\u2030$ $25 < S < 40$ $D$ depth $m$ $0 < D < 8000$","title":"Mathematical definition"},{"location":"sound_speed_sea_mackenzie.en/#octavematlab-implementation","text":"function C = sound_speed_sea_mackenzie(T,S,D) % Arguments % T: temperature \\ degree Celsius \\ -2 < T < 30 % S: salinity \\ ppt \\ 25 < S < 40 % D: depth \\ m \\ 0 < D < 8000 % Results % C: speed of sound in seawater \\ m/s C = 1448.96 + 4.591*T - (5.304e-2)*(T.^2) + (2.374e-4)*(T.^3) ... + 1.340*(S-35) + (1.630e-2)*D + (1.675e-7)*(D.^2) ... - (1.025e-2)*T.*(S-35) - (7.139e-13)*T.*(D.^3); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_sea_mackenzie.en/#computational-examples","text":"$D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.42$ $1483.78$ $1515.95$ $1540.36$ $1558.44$ $1000\\ m$ $1458.73$ $1500.08$ $1532.24$ $1556.65$ $1574.72$ $2000\\ m$ $1475.53$ $1516.83$ $1548.94$ $1573.30$ $1591.32$ $5000\\ m$ $1527.95$ $1568.41$ $1599.69$ $1623.21$ $1640.40$","title":"Computational examples"},{"location":"sound_speed_sea_mackenzie.en/#references","text":"Mackenzie, Kenneth V, \"Nine\u2010term equation for sound speed in the oceans\", 1981","title":"References"},{"location":"sound_speed_sea_npl.en/","text":"Sound speed in sea. NPL equation Mathematical definition $$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = 1402.5 + 5T - 5.44 \\times {10^{ - 2}}{T^2} + 2.1 \\times {10^{ - 4}}{T^3}\\\\ + 1.33S - 1.23 \\times {10^{ - 2}}ST + 8.7 \\times {10^{ - 5}}S{T^2}\\\\ + 1.56 \\times {10^{ - 2}}D + 2.55 \\times {10^{ - 7}}{Z^2} - 7.3 \\times {10^{ - 12}}{Z^3}\\\\ + 1.2 \\times {10^{ - 6}}Z\\left( {L - 45} \\right) - 9.5 \\times {10^{ - 13}}T{Z^3}\\\\ + 3 \\times {10^{ - 7}}{T^2}Z + 1.43 \\times {10^{ - 5}}SZ \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $-1 < T < 30$ $S$ salinity $\u2030$ $0 < S < 42$ $D$ depth $m$ $0 < D < 12000$ Octave/Matlab implementation function C = sound_speed_sea_npl(T,S,D,L) % Arguments % T: temperature \\ degree Celsius \\ -1 < T < 30 % S: salinity \\ ppt \\ 0 < S < 42 % D: depth \\ m \\ 0 < D < 12000 % L: latitude \\ degree \\ -90 < L < 90 % Results % C: speed of sound in seawater \\ m/s C = 1402.5 + 5*T - (5.44e-2)*(T.^2) + (2.1e-4)*(T.^3) ... + 1.33*S - (1.23e-2)*S.*T + (8.7e-5)*S.*(T.^2) ... + (1.56e-2)*D + (2.55e-7)*(D.^2) - (7.3e-12)*(D.^3) ... + (1.2e-6)*D.*(L-45) - (9.5e-13)*T.*(D.^3) + (3e-7)*(T.^2).*D ... + (1.43e-5)*S.*D; end Computational examples $D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.56$ $1483.90$ $1516.14$ $1540.55$ $1558.38$ $1000\\ m$ $1458.62$ $1499.98$ $1532.31$ $1556.85$ $1574.88$ $2000\\ m$ $1475.31$ $1516.64$ $1548.98$ $1573.61$ $1591.78$ $5000\\ m$ $1527.74$ $1568.04$ $1599.55$ $1623.51$ $1641.20$ References Leroy, Claude C; Robinson, Stephen P; Goldsmith, Mike J, \"A new equation for the accurate calculation of sound speed in all oceans\", 2008","title":"Leroy et al. equation (NPL)"},{"location":"sound_speed_sea_npl.en/#sound-speed-in-sea-npl-equation","text":"","title":"Sound speed in sea. NPL equation"},{"location":"sound_speed_sea_npl.en/#mathematical-definition","text":"$$\\boxed{\\begin{array}{l} C\\left( {T,S,D} \\right) = 1402.5 + 5T - 5.44 \\times {10^{ - 2}}{T^2} + 2.1 \\times {10^{ - 4}}{T^3}\\\\ + 1.33S - 1.23 \\times {10^{ - 2}}ST + 8.7 \\times {10^{ - 5}}S{T^2}\\\\ + 1.56 \\times {10^{ - 2}}D + 2.55 \\times {10^{ - 7}}{Z^2} - 7.3 \\times {10^{ - 12}}{Z^3}\\\\ + 1.2 \\times {10^{ - 6}}Z\\left( {L - 45} \\right) - 9.5 \\times {10^{ - 13}}T{Z^3}\\\\ + 3 \\times {10^{ - 7}}{T^2}Z + 1.43 \\times {10^{ - 5}}SZ \\end{array}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $-1 < T < 30$ $S$ salinity $\u2030$ $0 < S < 42$ $D$ depth $m$ $0 < D < 12000$","title":"Mathematical definition"},{"location":"sound_speed_sea_npl.en/#octavematlab-implementation","text":"function C = sound_speed_sea_npl(T,S,D,L) % Arguments % T: temperature \\ degree Celsius \\ -1 < T < 30 % S: salinity \\ ppt \\ 0 < S < 42 % D: depth \\ m \\ 0 < D < 12000 % L: latitude \\ degree \\ -90 < L < 90 % Results % C: speed of sound in seawater \\ m/s C = 1402.5 + 5*T - (5.44e-2)*(T.^2) + (2.1e-4)*(T.^3) ... + 1.33*S - (1.23e-2)*S.*T + (8.7e-5)*S.*(T.^2) ... + (1.56e-2)*D + (2.55e-7)*(D.^2) - (7.3e-12)*(D.^3) ... + (1.2e-6)*D.*(L-45) - (9.5e-13)*T.*(D.^3) + (3e-7)*(T.^2).*D ... + (1.43e-5)*S.*D; end","title":"Octave/Matlab implementation"},{"location":"sound_speed_sea_npl.en/#computational-examples","text":"$D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.56$ $1483.90$ $1516.14$ $1540.55$ $1558.38$ $1000\\ m$ $1458.62$ $1499.98$ $1532.31$ $1556.85$ $1574.88$ $2000\\ m$ $1475.31$ $1516.64$ $1548.98$ $1573.61$ $1591.78$ $5000\\ m$ $1527.74$ $1568.04$ $1599.55$ $1623.51$ $1641.20$","title":"Computational examples"},{"location":"sound_speed_sea_npl.en/#references","text":"Leroy, Claude C; Robinson, Stephen P; Goldsmith, Mike J, \"A new equation for the accurate calculation of sound speed in all oceans\", 2008","title":"References"},{"location":"sound_speed_sea_unesco.en/","text":"Sound speed in sea. UNESCO equation Mathematical definition $$\\boxed{C\\left( {T,S,P} \\right) = {C_W}\\left( {T,P} \\right) + A\\left( {T,P} \\right)S + B\\left( {T,P} \\right){S^{\\frac{3}{2}}} + D\\left( {T,P} \\right){S^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 40$ $S$ salinity $\u2030$ $5 < S < 40$ $P$ pressure $kPa$ $\\times 10^{-2}$ $0 < P < 100000$ $$\\begin{array}{l} {C_W}\\left( {T,P} \\right) = \\left( {{C_{00}} + {C_{01}}T + {C_{02}}{T^2} + {C_{03}}{T^3} + {C_{04}}{T^4} + {C_{05}}{T^5}} \\right)\\\\ + \\left( {{C_{10}} + {C_{11}}T + {C_{12}}{T^2} + {C_{13}}{T^3} + {C_{14}}{T^4}} \\right)P\\\\ + \\left( {{C_{20}} + {C_{21}}T + {C_{22}}{T^2} + {C_{23}}{T^3} + {C_{24}}{T^4}} \\right){P^2}\\\\ + \\left( {{C_{30}} + {C_{31}}T + {C_{32}}{T^2}} \\right){P^3} \\end{array}$$ $$\\begin{array}{l} A\\left( {T,P} \\right) = \\left( {{A_{00}} + {A_{01}}T + {A_{02}}{T^2} + {A_{03}}{T^3} + {A_{04}}{T^4}} \\right)\\\\ + \\left( {{A_{10}} + {A_{11}}T + {A_{12}}{T^2} + {A_{13}}{T^3} + {A_{14}}{T^4}} \\right)P\\\\ + \\left( {{A_{20}} + {A_{21}}T + {A_{22}}{T^2} + {A_{23}}{T^3}} \\right){P^2}\\\\ + \\left( {{A_{31}} + {A_{31}}T + {A_{32}}{T^2}} \\right){P^3} \\end{array}$$ $$B\\left( {T,P} \\right) = {B_{00}} + {B_{01}}T + \\left( {{B_{10}} + {B_{11}}T} \\right)P$$ $$D\\left( {T,P} \\right) = {D_{00}} + {D_{10}}P$$ Coefficient Value Coefficient Value $C_{00}$ $1402.388$ $A_{02}$ $7.166\\times10^{-5}$ $C_{01}$ $5.03830$ $A_{03}$ $2.008\\times10^{-6}$ $C_{02}$ $-5.81090\\times10^{-2}$ $A_{04}$ $-3.21\\times10^{-8}$ $C_{03}$ $3.3432\\times10^{-4}$ $A_{10}$ $9.4742\\times10^{-5}$ $C_{04}$ $-1.47797\\times10^{-6}$ $A_{11}$ $-1.2583\\times10^{-5}$ $C_{05}$ $3.1419\\times10^{-9}$ $A_{12}$ $-6.4928\\times10^{-8}$ $C_{10}$ $0.153563$ $A_{13}$ $1.0515\\times10^{-8}$ $C_{11}$ $6.8999\\times10^{-4}$ $A_{14}$ $-2.0142\\times10^{-10}$ $C_{12}$ $-8.1829\\times10^{-6}$ $A_{20}$ $-3.9064\\times10^{-7}$ $C_{13}$ $1.3632\\times10^{-7}$ $A_{21}$ $9.1061\\times10^{-9}$ $C_{14}$ $-6.1260\\times10^{-10}$ $A_{22}$ $-1.6009\\times10^{-10}$ $C_{20}$ $3.1260\\times10^{-5}$ $A_{23}$ $7.994\\times10^{-12}$ $C_{21}$ $-1.7111\\times10^{-6}$ $A_{30}$ $1.100\\times10^{-10}$ $C_{22}$ $2.5986\\times10^{-8}$ $A_{31}$ $6.651\\times10^{-12}$ $C_{23}$ $-2.5353\\times10^{-10}$ $A_{32}$ $-3.391\\times10^{-13}$ $C_{24}$ $1.0415\\times10^{-12}$ $B_{00}$ $-1.922\\times10^{-2}$ $C_{30}$ $-9.7729\\times10^{-9}$ $B_{01}$ $-4.42\\times10^{-5}$ $C_{31}$ $3.8513\\times10^{-10}$ $B_{10}$ $7.3637\\times10^{-5}$ $C_{32}$ $-2.3654\\times10^{-12}$ $B_{11}$ $1.7950\\times10^{-7}$ $A_{00}$ $1.389$ $D_{00}$ $1.727\\times10^{-3}$ $A_{01}$ $1.262\\times10^{-2}$ $D_{10}$ $-7.9836\\times10^{-6}$ Octave/Matlab implementation function C = sound_speed_sea_unesco(T,S,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 40 % S: salinity \\ ppt \\ 5 < S < 40 % P: pressure \\ kPa \\ 0 < P < 100000 % Results % C: speed of sound in seawater \\ m/s C00=1402.388; C01=5.03830; C02=-5.81090e-2; C03=3.3432e-4; C04=-1.47797e-6; C05=3.1419e-9; C10=0.153563; C11=6.8999e-4; C12=-8.1829e-6; C13=1.3632e-7; C14=-6.1260e-10; C20=3.1260e-5; C21=-1.7111e-6; C22=2.5986e-8; C23=-2.5353e-10; C24=1.0415e-12; C30=-9.7729e-9; C31=3.8513e-10; C32=-2.3654e-12; A00=1.389; A01=-1.262e-2; A02=7.166e-5; A03=2.008e-6; A04=-3.21e-8; A10=9.4742e-5; A11=-1.2583e-5; A12=-6.4928e-8; A13=1.0515e-8; A14=-2.0142e-10; A20=-3.9064e-7; A21=9.1061e-9; A22=-1.6009e-10; A23=7.994e-12; A30=1.100e-10; A31=6.651e-12; A32=-3.391e-13; B00=-1.922e-2; B01=-4.42e-5; B10=7.3637e-5; B11=1.7950e-7; D00=1.727e-3; D10=-7.9836e-6; p = P*1e-2; Cw = (C00 + C01*T + C02*(T.^2) + C03*(T.^3) + C04*(T.^4) + C05*(T.^5)) ... + (C10 + C11*T + C12*(T.^2) + C13*(T.^3) + C14*(T.^4)).*p ... + (C20 + C21*T + C22*(T.^2) + C23*(T.^3) + C24*(T.^4)).*(p.^2) ... + (C30 + C31*T + C32*(T.^2)).*(p.^3); A = (A00 + A01*T + A02*(T.^2) + A03*(T.^3) + A04*(T.^4)) ... + (A10 + A11*T + A12*(T.^2) + A13*(T.^3) + A14*(T.^4)).*p ... + (A20 + A21*T + A22*(T.^2) + A23*(T.^3)).*(p.^2) ... + (A30 + A31*T + A32*(T.^2)).*(p.^3); B = B00 + B01*T + (B10 + B11*T).*p; D = D00+(D10.*p); C = Cw + A.*S + B.*(S.^(3/2)) + D.*(S.^2); end Computational examples $D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.62$ $1483.92$ $1516.06$ $1540.59$ $1558.51$ $1000\\ m$ $1458.91$ $1500.37$ $1532.69$ $1557.44$ $1575.52$ $2000\\ m$ $1475.80$ $1517.20$ $1549.55$ $1574.45$ $1592.71$ $5000\\ m$ $1528.73$ $1568.88$ $1600.53$ $1625.45$ $1644.16$ References Chen, Chen\u2010Tung; Millero, Frank J, \"Speed of sound in seawater at high pressures\", 1977 Millero, FJ; Li, X, \"On equations for the speed of sound in seawater-comment\", 1994","title":"Chen & Millero equation (UNESCO)"},{"location":"sound_speed_sea_unesco.en/#sound-speed-in-sea-unesco-equation","text":"","title":"Sound speed in sea. UNESCO equation"},{"location":"sound_speed_sea_unesco.en/#mathematical-definition","text":"$$\\boxed{C\\left( {T,S,P} \\right) = {C_W}\\left( {T,P} \\right) + A\\left( {T,P} \\right)S + B\\left( {T,P} \\right){S^{\\frac{3}{2}}} + D\\left( {T,P} \\right){S^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 40$ $S$ salinity $\u2030$ $5 < S < 40$ $P$ pressure $kPa$ $\\times 10^{-2}$ $0 < P < 100000$ $$\\begin{array}{l} {C_W}\\left( {T,P} \\right) = \\left( {{C_{00}} + {C_{01}}T + {C_{02}}{T^2} + {C_{03}}{T^3} + {C_{04}}{T^4} + {C_{05}}{T^5}} \\right)\\\\ + \\left( {{C_{10}} + {C_{11}}T + {C_{12}}{T^2} + {C_{13}}{T^3} + {C_{14}}{T^4}} \\right)P\\\\ + \\left( {{C_{20}} + {C_{21}}T + {C_{22}}{T^2} + {C_{23}}{T^3} + {C_{24}}{T^4}} \\right){P^2}\\\\ + \\left( {{C_{30}} + {C_{31}}T + {C_{32}}{T^2}} \\right){P^3} \\end{array}$$ $$\\begin{array}{l} A\\left( {T,P} \\right) = \\left( {{A_{00}} + {A_{01}}T + {A_{02}}{T^2} + {A_{03}}{T^3} + {A_{04}}{T^4}} \\right)\\\\ + \\left( {{A_{10}} + {A_{11}}T + {A_{12}}{T^2} + {A_{13}}{T^3} + {A_{14}}{T^4}} \\right)P\\\\ + \\left( {{A_{20}} + {A_{21}}T + {A_{22}}{T^2} + {A_{23}}{T^3}} \\right){P^2}\\\\ + \\left( {{A_{31}} + {A_{31}}T + {A_{32}}{T^2}} \\right){P^3} \\end{array}$$ $$B\\left( {T,P} \\right) = {B_{00}} + {B_{01}}T + \\left( {{B_{10}} + {B_{11}}T} \\right)P$$ $$D\\left( {T,P} \\right) = {D_{00}} + {D_{10}}P$$ Coefficient Value Coefficient Value $C_{00}$ $1402.388$ $A_{02}$ $7.166\\times10^{-5}$ $C_{01}$ $5.03830$ $A_{03}$ $2.008\\times10^{-6}$ $C_{02}$ $-5.81090\\times10^{-2}$ $A_{04}$ $-3.21\\times10^{-8}$ $C_{03}$ $3.3432\\times10^{-4}$ $A_{10}$ $9.4742\\times10^{-5}$ $C_{04}$ $-1.47797\\times10^{-6}$ $A_{11}$ $-1.2583\\times10^{-5}$ $C_{05}$ $3.1419\\times10^{-9}$ $A_{12}$ $-6.4928\\times10^{-8}$ $C_{10}$ $0.153563$ $A_{13}$ $1.0515\\times10^{-8}$ $C_{11}$ $6.8999\\times10^{-4}$ $A_{14}$ $-2.0142\\times10^{-10}$ $C_{12}$ $-8.1829\\times10^{-6}$ $A_{20}$ $-3.9064\\times10^{-7}$ $C_{13}$ $1.3632\\times10^{-7}$ $A_{21}$ $9.1061\\times10^{-9}$ $C_{14}$ $-6.1260\\times10^{-10}$ $A_{22}$ $-1.6009\\times10^{-10}$ $C_{20}$ $3.1260\\times10^{-5}$ $A_{23}$ $7.994\\times10^{-12}$ $C_{21}$ $-1.7111\\times10^{-6}$ $A_{30}$ $1.100\\times10^{-10}$ $C_{22}$ $2.5986\\times10^{-8}$ $A_{31}$ $6.651\\times10^{-12}$ $C_{23}$ $-2.5353\\times10^{-10}$ $A_{32}$ $-3.391\\times10^{-13}$ $C_{24}$ $1.0415\\times10^{-12}$ $B_{00}$ $-1.922\\times10^{-2}$ $C_{30}$ $-9.7729\\times10^{-9}$ $B_{01}$ $-4.42\\times10^{-5}$ $C_{31}$ $3.8513\\times10^{-10}$ $B_{10}$ $7.3637\\times10^{-5}$ $C_{32}$ $-2.3654\\times10^{-12}$ $B_{11}$ $1.7950\\times10^{-7}$ $A_{00}$ $1.389$ $D_{00}$ $1.727\\times10^{-3}$ $A_{01}$ $1.262\\times10^{-2}$ $D_{10}$ $-7.9836\\times10^{-6}$","title":"Mathematical definition"},{"location":"sound_speed_sea_unesco.en/#octavematlab-implementation","text":"function C = sound_speed_sea_unesco(T,S,P) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 40 % S: salinity \\ ppt \\ 5 < S < 40 % P: pressure \\ kPa \\ 0 < P < 100000 % Results % C: speed of sound in seawater \\ m/s C00=1402.388; C01=5.03830; C02=-5.81090e-2; C03=3.3432e-4; C04=-1.47797e-6; C05=3.1419e-9; C10=0.153563; C11=6.8999e-4; C12=-8.1829e-6; C13=1.3632e-7; C14=-6.1260e-10; C20=3.1260e-5; C21=-1.7111e-6; C22=2.5986e-8; C23=-2.5353e-10; C24=1.0415e-12; C30=-9.7729e-9; C31=3.8513e-10; C32=-2.3654e-12; A00=1.389; A01=-1.262e-2; A02=7.166e-5; A03=2.008e-6; A04=-3.21e-8; A10=9.4742e-5; A11=-1.2583e-5; A12=-6.4928e-8; A13=1.0515e-8; A14=-2.0142e-10; A20=-3.9064e-7; A21=9.1061e-9; A22=-1.6009e-10; A23=7.994e-12; A30=1.100e-10; A31=6.651e-12; A32=-3.391e-13; B00=-1.922e-2; B01=-4.42e-5; B10=7.3637e-5; B11=1.7950e-7; D00=1.727e-3; D10=-7.9836e-6; p = P*1e-2; Cw = (C00 + C01*T + C02*(T.^2) + C03*(T.^3) + C04*(T.^4) + C05*(T.^5)) ... + (C10 + C11*T + C12*(T.^2) + C13*(T.^3) + C14*(T.^4)).*p ... + (C20 + C21*T + C22*(T.^2) + C23*(T.^3) + C24*(T.^4)).*(p.^2) ... + (C30 + C31*T + C32*(T.^2)).*(p.^3); A = (A00 + A01*T + A02*(T.^2) + A03*(T.^3) + A04*(T.^4)) ... + (A10 + A11*T + A12*(T.^2) + A13*(T.^3) + A14*(T.^4)).*p ... + (A20 + A21*T + A22*(T.^2) + A23*(T.^3)).*(p.^2) ... + (A30 + A31*T + A32*(T.^2)).*(p.^3); B = B00 + B01*T + (B10 + B11*T).*p; D = D00+(D10.*p); C = Cw + A.*S + B.*(S.^(3/2)) + D.*(S.^2); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_sea_unesco.en/#computational-examples","text":"$D$\\$T$ $0\u00b0\\text{C}$ $10\u00b0\\text{C}$ $20\u00b0\\text{C}$ $30\u00b0\\text{C}$ $40\u00b0\\text{C}$ $10\\ m$ $1442.62$ $1483.92$ $1516.06$ $1540.59$ $1558.51$ $1000\\ m$ $1458.91$ $1500.37$ $1532.69$ $1557.44$ $1575.52$ $2000\\ m$ $1475.80$ $1517.20$ $1549.55$ $1574.45$ $1592.71$ $5000\\ m$ $1528.73$ $1568.88$ $1600.53$ $1625.45$ $1644.16$","title":"Computational examples"},{"location":"sound_speed_sea_unesco.en/#references","text":"Chen, Chen\u2010Tung; Millero, Frank J, \"Speed of sound in seawater at high pressures\", 1977 Millero, FJ; Li, X, \"On equations for the speed of sound in seawater-comment\", 1994","title":"References"},{"location":"sound_speed_water_bilaniuk_112.en/","text":"Sound speed in pure water. Bilaniuk & Wong 112 point equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238742 \\times 10^{3}$ $k_{1}$ $+5.03821344$ $k_{2}$ $-5.80539349 \\times 10^{-2}$ $k_{3}$ $+3.32000870 \\times 10^{-4}$ $k_{4}$ $-1.44537900 \\times 10^{-6}$ $k_{5}$ $+2.99402365 \\times 10^{-9}$ Octave/Matlab implementation function C = sound_speed_water_bilaniuk_112(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238742e+3; k1 = +5.03821344e+0; k2 = -5.80539349e-2; k3 = +3.32000870e-4; k4 = -1.44537900e-6; k5 = +2.99402365e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end Computational examples References Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"Bilaniuk & Wong 112 point euqation"},{"location":"sound_speed_water_bilaniuk_112.en/#sound-speed-in-pure-water-bilaniuk-wong-112-point-equation","text":"","title":"Sound speed in pure water. Bilaniuk &amp; Wong 112 point equation"},{"location":"sound_speed_water_bilaniuk_112.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238742 \\times 10^{3}$ $k_{1}$ $+5.03821344$ $k_{2}$ $-5.80539349 \\times 10^{-2}$ $k_{3}$ $+3.32000870 \\times 10^{-4}$ $k_{4}$ $-1.44537900 \\times 10^{-6}$ $k_{5}$ $+2.99402365 \\times 10^{-9}$","title":"Mathematical definition"},{"location":"sound_speed_water_bilaniuk_112.en/#octavematlab-implementation","text":"function C = sound_speed_water_bilaniuk_112(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238742e+3; k1 = +5.03821344e+0; k2 = -5.80539349e-2; k3 = +3.32000870e-4; k4 = -1.44537900e-6; k5 = +2.99402365e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_bilaniuk_112.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_bilaniuk_112.en/#references","text":"Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"References"},{"location":"sound_speed_water_bilaniuk_148.en/","text":"Sound speed in pure water. Bilaniuk & Wong 148 point equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238744 \\times 10^{3}$ $k_{1}$ $+5.03836171$ $k_{2}$ $-5.81172916 \\times 10^{-2}$ $k_{3}$ $+3.34638117 \\times 10^{-4}$ $k_{4}$ $-1.48259672 \\times 10^{-6}$ $k_{5}$ $+3.16585020 \\times 10^{-9}$ Octave/Matlab implementation function C = sound_speed_water_bilaniuk_148(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238744e+3; k1 = +5.03836171e+0; k2 = -5.81172916e-2; k3 = +3.34638117e-4; k4 = -1.48259672e-6; k5 = +3.16585020e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end Computational examples References Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"Bilaniuk & Wong 148 point euqation"},{"location":"sound_speed_water_bilaniuk_148.en/#sound-speed-in-pure-water-bilaniuk-wong-148-point-equation","text":"","title":"Sound speed in pure water. Bilaniuk &amp; Wong 148 point equation"},{"location":"sound_speed_water_bilaniuk_148.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238744 \\times 10^{3}$ $k_{1}$ $+5.03836171$ $k_{2}$ $-5.81172916 \\times 10^{-2}$ $k_{3}$ $+3.34638117 \\times 10^{-4}$ $k_{4}$ $-1.48259672 \\times 10^{-6}$ $k_{5}$ $+3.16585020 \\times 10^{-9}$","title":"Mathematical definition"},{"location":"sound_speed_water_bilaniuk_148.en/#octavematlab-implementation","text":"function C = sound_speed_water_bilaniuk_148(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238744e+3; k1 = +5.03836171e+0; k2 = -5.81172916e-2; k3 = +3.34638117e-4; k4 = -1.48259672e-6; k5 = +3.16585020e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_bilaniuk_148.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_bilaniuk_148.en/#references","text":"Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"References"},{"location":"sound_speed_water_bilaniuk_36.en/","text":"Sound speed in pure water. Bilaniuk & Wong 36 point equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238677 \\times 10^{3}$ $k_{1}$ $+5.03798765$ $k_{2}$ $-5.80980033 \\times 10^{-2}$ $k_{3}$ $+3.34296650 \\times 10^{-4}$ $k_{4}$ $-1.47936902 \\times 10^{-6}$ $k_{5}$ $+3.14893508 \\times 10^{-9}$ Octave/Matlab implementation function C = sound_speed_water_bilaniuk_36(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238677e+3; k1 = +5.03798765e+0; k2 = -5.80980033e-2; k3 = +3.34296650e-4; k4 = -1.47936902e-6; k5 = +3.14893508e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end Computational examples References Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"Bilaniuk & Wong 36 point euqation"},{"location":"sound_speed_water_bilaniuk_36.en/#sound-speed-in-pure-water-bilaniuk-wong-36-point-equation","text":"","title":"Sound speed in pure water. Bilaniuk &amp; Wong 36 point equation"},{"location":"sound_speed_water_bilaniuk_36.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 100$ Coefficient Value $k_{0}$ $+1.40238677 \\times 10^{3}$ $k_{1}$ $+5.03798765$ $k_{2}$ $-5.80980033 \\times 10^{-2}$ $k_{3}$ $+3.34296650 \\times 10^{-4}$ $k_{4}$ $-1.47936902 \\times 10^{-6}$ $k_{5}$ $+3.14893508 \\times 10^{-9}$","title":"Mathematical definition"},{"location":"sound_speed_water_bilaniuk_36.en/#octavematlab-implementation","text":"function C = sound_speed_water_bilaniuk_36(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 100 % Results % C: speed of sound in pure water \\ m/s k0 = +1.40238677e+3; k1 = +5.03798765e+0; k2 = -5.80980033e-2; k3 = +3.34296650e-4; k4 = -1.47936902e-6; k5 = +3.14893508e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_bilaniuk_36.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_bilaniuk_36.en/#references","text":"Bilaniuk, Nykolai; Wong, George SK, \"Speed of sound in pure water as a function of temperature\", 1993 Bilaniuk, Nykolai; Wong, George SK, \"Erratum: Speed of sound in pure water as a function of temperature [J. Acoust. Soc. Am. 93, 1609\u20131612 (1993)]\", 1996","title":"References"},{"location":"sound_speed_water_lubbers_b1.en/","text":"Sound speed in pure water. Lubbers B1 equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $15 < T < 35$ Coefficient Value $k_{0}$ $+1404.3$ $k_{1}$ $+4.7$ $k_{2}$ $-0.04$ Octave/Matlab implementation function C = sound_speed_water_lubbers_b1(T) % Arguments % T: temperature \\ degree Celsius \\ 15 < T < 35 % Results % C: speed of sound in pure water \\ m/s C = 1404.3 + 4.7*T - 0.04*(T.^2); end Computational examples References Lubbers, J; Graaff, R, \"A simple and accurate formula for the sound velocity in water\", 1998","title":"Lubbers & Graaff B1"},{"location":"sound_speed_water_lubbers_b1.en/#sound-speed-in-pure-water-lubbers-b1-equation","text":"","title":"Sound speed in pure water. Lubbers B1 equation"},{"location":"sound_speed_water_lubbers_b1.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $15 < T < 35$ Coefficient Value $k_{0}$ $+1404.3$ $k_{1}$ $+4.7$ $k_{2}$ $-0.04$","title":"Mathematical definition"},{"location":"sound_speed_water_lubbers_b1.en/#octavematlab-implementation","text":"function C = sound_speed_water_lubbers_b1(T) % Arguments % T: temperature \\ degree Celsius \\ 15 < T < 35 % Results % C: speed of sound in pure water \\ m/s C = 1404.3 + 4.7*T - 0.04*(T.^2); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_lubbers_b1.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_lubbers_b1.en/#references","text":"Lubbers, J; Graaff, R, \"A simple and accurate formula for the sound velocity in water\", 1998","title":"References"},{"location":"sound_speed_water_lubbers_c1.en/","text":"Sound speed in pure water. Lubbers C1 equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $10 < T < 40$ Coefficient Value $k_{0}$ $+1405.03$ $k_{1}$ $+4.624$ $k_{2}$ $-3.83 \\times 10^{-2}$ Octave/Matlab implementation function C = sound_speed_water_lubbers_c1(T) % Arguments % T: temperature \\ degree Celsius \\ 10 < T < 40 % Results % C: speed of sound in pure water \\ m/s C = 1405.03 + 4.624*T - (3.83e-2)*(T.^2); end Computational examples References Lubbers, J; Graaff, R, \"A simple and accurate formula for the sound velocity in water\", 1998","title":"Lubbers & Graaff C1"},{"location":"sound_speed_water_lubbers_c1.en/#sound-speed-in-pure-water-lubbers-c1-equation","text":"","title":"Sound speed in pure water. Lubbers C1 equation"},{"location":"sound_speed_water_lubbers_c1.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $10 < T < 40$ Coefficient Value $k_{0}$ $+1405.03$ $k_{1}$ $+4.624$ $k_{2}$ $-3.83 \\times 10^{-2}$","title":"Mathematical definition"},{"location":"sound_speed_water_lubbers_c1.en/#octavematlab-implementation","text":"function C = sound_speed_water_lubbers_c1(T) % Arguments % T: temperature \\ degree Celsius \\ 10 < T < 40 % Results % C: speed of sound in pure water \\ m/s C = 1405.03 + 4.624*T - (3.83e-2)*(T.^2); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_lubbers_c1.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_lubbers_c1.en/#references","text":"Lubbers, J; Graaff, R, \"A simple and accurate formula for the sound velocity in water\", 1998","title":"References"},{"location":"sound_speed_water_marczak.en/","text":"Sound speed in pure water. Marczak equation Mathematical definition $$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 95$ Coefficient Value $k_{0}$ $+1.402385 \\times 10^{3}$ $k_{1}$ $+5.038813$ $k_{2}$ $-5.799136 \\times 10^{-2}$ $k_{3}$ $+3.287156 \\times 10^{-4}$ $k_{4}$ $-1.398845 \\times 10^{-6}$ $k_{5}$ $+2.787860 \\times 10^{-9}$ Octave/Matlab implementation function C = sound_speed_water_marczak(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 95 % Results % C: speed of sound in pure water \\ m/s k0 = +1.402385e+3; k1 = +5.038813e+0; k2 = -5.799136e-2; k3 = +3.287156e-4; k4 = -1.398845e-6; k5 = +2.787860e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end Computational examples References Marczak, Wojciech, \"Water as a standard in the measurements of speed of sound in liquids\", 1997","title":"Marczak Equation"},{"location":"sound_speed_water_marczak.en/#sound-speed-in-pure-water-marczak-equation","text":"","title":"Sound speed in pure water. Marczak equation"},{"location":"sound_speed_water_marczak.en/#mathematical-definition","text":"$$\\boxed{C\\left( T \\right) = {k_0} + {k_1}T + {k_2}{T^2} + {k_3}{T^3} + {k_4}{T^4} + {k_5}{T^5}}$$ Notation Description Units Conversion Limits $C$ sound speed $m/s$ $T$ temperature $^{\\circ}C$ $0 < T < 95$ Coefficient Value $k_{0}$ $+1.402385 \\times 10^{3}$ $k_{1}$ $+5.038813$ $k_{2}$ $-5.799136 \\times 10^{-2}$ $k_{3}$ $+3.287156 \\times 10^{-4}$ $k_{4}$ $-1.398845 \\times 10^{-6}$ $k_{5}$ $+2.787860 \\times 10^{-9}$","title":"Mathematical definition"},{"location":"sound_speed_water_marczak.en/#octavematlab-implementation","text":"function C = sound_speed_water_marczak(T) % Arguments % T: temperature \\ degree Celsius \\ 0 < T < 95 % Results % C: speed of sound in pure water \\ m/s k0 = +1.402385e+3; k1 = +5.038813e+0; k2 = -5.799136e-2; k3 = +3.287156e-4; k4 = -1.398845e-6; k5 = +2.787860e-9; C = k0*(T.^0) + k1*(T.^1) + k2*(T.^2) ... + k3*(T.^3) + k4*(T.^4) + k5*(T.^5); end","title":"Octave/Matlab implementation"},{"location":"sound_speed_water_marczak.en/#computational-examples","text":"","title":"Computational examples"},{"location":"sound_speed_water_marczak.en/#references","text":"Marczak, Wojciech, \"Water as a standard in the measurements of speed of sound in liquids\", 1997","title":"References"}]}